{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "depositContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "frxETHAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sfrxETHAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_timelock_address",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_withdrawalCredential",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "new_status",
          "type": "bool"
        }
      ],
      "name": "DepositEtherPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "withdrawalCredential",
          "type": "bytes"
        }
      ],
      "name": "DepositSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sent_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withheld_amt",
          "type": "uint256"
        }
      ],
      "name": "ETHSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyERC20Recovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyEtherRecovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "KeysCleared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerNominated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "new_status",
          "type": "bool"
        }
      ],
      "name": "SubmitPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "timelock_address",
          "type": "address"
        }
      ],
      "name": "TimelockChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "withdrawalCredential",
          "type": "bytes"
        }
      ],
      "name": "ValidatorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ValidatorArrayCleared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "remove_idx",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "dont_care_about_ordering",
          "type": "bool"
        }
      ],
      "name": "ValidatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "times",
          "type": "uint256"
        }
      ],
      "name": "ValidatorsPopped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "from_pubKey",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "to_pubKey",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "from_idx",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "to_idx",
          "type": "uint256"
        }
      ],
      "name": "ValidatorsSwapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_withdrawalCredential",
          "type": "bytes"
        }
      ],
      "name": "WithdrawalCredentialSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithheldETHMoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRatio",
          "type": "uint256"
        }
      ],
      "name": "WithholdRatioSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEPOSIT_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RATIO_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "activeValidators",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "depositDataRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OperatorRegistry.Validator",
          "name": "validator",
          "type": "tuple"
        }
      ],
      "name": "addValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "depositDataRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OperatorRegistry.Validator[]",
          "name": "validatorArray",
          "type": "tuple[]"
        }
      ],
      "name": "addValidators",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearValidatorArray",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentWithheldETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositContract",
      "outputs": [
        {
          "internalType": "contract IDepositContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEtherPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxETHToken",
      "outputs": [
        {
          "internalType": "contract frxETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getValidator",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "withdrawalCredentials",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "depositDataRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "depositDataRoot",
          "type": "bytes32"
        }
      ],
      "name": "getValidatorStruct",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "depositDataRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OperatorRegistry.Validator",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "moveWithheldETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "nominateNewOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nominatedOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "times",
          "type": "uint256"
        }
      ],
      "name": "popValidators",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "recoverEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "remove_idx",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "dont_care_about_ordering",
          "type": "bool"
        }
      ],
      "name": "removeValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timelock_address",
          "type": "address"
        }
      ],
      "name": "setTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_new_withdrawal_pubkey",
          "type": "bytes"
        }
      ],
      "name": "setWithdrawalCredential",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRatio",
          "type": "uint256"
        }
      ],
      "name": "setWithholdRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sfrxETHToken",
      "outputs": [
        {
          "internalType": "contract IsfrxETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "submitAndDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "submitAndGive",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submitPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from_idx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to_idx",
          "type": "uint256"
        }
      ],
      "name": "swapValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock_address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "togglePauseDepositEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "togglePauseSubmits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withholdRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b50604051620033d6380380620033d6833981016040819052620000349162000228565b828282826001600160a01b038116620000935760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a150600480546001600160a01b0319166001600160a01b03841617905580516200011b9060039060208401906200014f565b505060016005555050506001600160a01b03948516608052505090821660a0521660c052600060068190556007556200039f565b8280546200015d9062000363565b90600052602060002090601f016020900481019282620001815760008555620001cc565b82601f106200019c57805160ff1916838001178555620001cc565b82800160010185558215620001cc579182015b82811115620001cc578251825591602001919060010190620001af565b50620001da929150620001de565b5090565b5b80821115620001da5760008155600101620001df565b80516001600160a01b03811681146200020d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c087890312156200024257600080fd5b6200024d87620001f5565b955060206200025e818901620001f5565b95506200026e60408901620001f5565b94506200027e60608901620001f5565b93506200028e60808901620001f5565b60a08901519093506001600160401b0380821115620002ac57600080fd5b818a0191508a601f830112620002c157600080fd5b815181811115620002d657620002d662000212565b604051601f8201601f19908116603f0116810190838211818310171562000301576200030162000212565b816040528281528d868487010111156200031a57600080fd5b600093505b828410156200033e57848401860151818501870152928501926200031f565b82841115620003505760008684830101525b8096505050505050509295509295509295565b600181811c908216806200037857607f821691505b6020821081036200039957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c051612fe4620003f26000396000818161025a015281816110ae0152611172015260008181610534015281816107aa01526110dc0152600081816106ae01526115f50152612fe46000f3fe6080604052600436106102135760003560e01c8063a3f3498011610118578063bdacb303116100a0578063d32867d01161006f578063d32867d014610645578063dc6663c71461065c578063e77df3661461067c578063e94ad65b1461069c578063f63a1711146106d057600080fd5b8063bdacb303146105b7578063bfda0c8c146105d7578063c3d31487146105ea578063cdcedf401461060a57600080fd5b8063b5d89627116100e7578063b5d89627146104c3578063b5e5e64c146104f3578063b6d24f1814610508578063ba947f2714610522578063bc9944f91461055657600080fd5b8063a3f3498014610459578063aa6fa83c1461046e578063ae6e83bf1461048e578063b507fb00146104ae57600080fd5b806353a47bb71161019b57806379ba50971161016a57806379ba5097146103d95780638980f11f146103ee5780638da5cb5b1461040e5780638e69d7ad1461042e57806398ea5fca1461044457600080fd5b806353a47bb71461038657806357c59b04146103a65780635bcb2fc6146103bc5780635d593f8d146103c457600080fd5b80633683c204116101e25780633683c204146102e857806336bf3325146103085780633f8380b6146103335780634b9b90c5146103535780634dcd45471461037357600080fd5b80631627540c146102285780631c568db614610248578063206583ac1461029957806335b5d534146102c857600080fd5b3661022357610221336106f0565b005b600080fd5b34801561023457600080fd5b506102216102433660046126de565b61089c565b34801561025457600080fd5b5061027c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102a557600080fd5b506009546102b890610100900460ff1681565b6040519015158152602001610290565b3480156102d457600080fd5b506102216102e3366004612702565b610963565b3480156102f457600080fd5b506102216103033660046127c7565b610d6b565b34801561031457600080fd5b506103256801bc16d674ec80000081565b604051908152602001610290565b34801561033f57600080fd5b5061022161034e366004612804565b610e3d565b34801561035f57600080fd5b5061022161036e366004612830565b610fcd565b6103256103813660046126de565b61108c565b34801561039257600080fd5b5060015461027c906001600160a01b031681565b3480156103b257600080fd5b5061032560065481565b610221611239565b3480156103d057600080fd5b50600254610325565b3480156103e557600080fd5b50610221611244565b3480156103fa57600080fd5b50610221610409366004612804565b61132e565b34801561041a57600080fd5b5060005461027c906001600160a01b031681565b34801561043a57600080fd5b5061032560075481565b34801561045057600080fd5b50610221611477565b34801561046557600080fd5b5061022161170b565b34801561047a57600080fd5b5061022161048936600461286b565b611781565b34801561049a57600080fd5b506102216104a936600461286b565b611848565b3480156104ba57600080fd5b5061022161191e565b3480156104cf57600080fd5b506104e36104de36600461286b565b6119ab565b60405161029094939291906128dc565b3480156104ff57600080fd5b50610221611bb9565b34801561051457600080fd5b506009546102b89060ff1681565b34801561052e57600080fd5b5061027c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561056257600080fd5b506105aa610571366004612927565b60408051606080820183528082526020820152600091810191909152506040805160608101825293845260208401929092529082015290565b6040516102909190612994565b3480156105c357600080fd5b506102216105d23660046126de565b611c50565b6102216105e53660046126de565b611d2b565b3480156105f657600080fd5b5061022161060536600461286b565b611d34565b34801561061657600080fd5b506102b86106253660046127c7565b805160208183018101805160088252928201919093012091525460ff1681565b34801561065157600080fd5b50610325620f424081565b34801561066857600080fd5b5060045461027c906001600160a01b031681565b34801561068857600080fd5b506102216106973660046129f2565b611e39565b3480156106a857600080fd5b5061027c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106dc57600080fd5b506102216106eb366004612a22565b612206565b6106f861228e565b60095460ff16156107435760405162461bcd60e51b815260206004820152601060248201526f14dd589b5a5d081a5cc81c185d5cd95960821b60448201526064015b60405180910390fd5b346000036107855760405162461bcd60e51b815260206004820152600f60248201526e043616e6e6f74207375626d6974203608c1b604482015260640161073a565b604051631a895faf60e21b81526001600160a01b0382811660048301523460248301527f00000000000000000000000000000000000000000000000000000000000000001690636a257ebc90604401600060405180830381600087803b1580156107ee57600080fd5b505af1158015610802573d6000803e3d6000fd5b50505050600060065460001461084857620f4240600654346108249190612aad565b61082e9190612acc565b905080600760008282546108429190612aee565b90915550505b60408051348152602081018390526001600160a01b0384169133917f29b3e86ecfd94a32218997c40b051e650e4fd8c97fc7a4d266be3f7c61c5205b910160405180910390a3506108996001600555565b50565b6000546001600160a01b0316331461090e5760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b606482015260840161073a565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b6004546001600160a01b031633148061098657506000546001600160a01b031633145b6109a25760405162461bcd60e51b815260040161073a90612b06565b6000600283815481106109b7576109b7612b35565b90600052602060002090600302016040518060600160405290816000820180546109e090612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0c90612b4b565b8015610a595780601f10610a2e57610100808354040283529160200191610a59565b820191906000526020600020905b815481529060010190602001808311610a3c57829003601f168201915b50505050508152602001600182018054610a7290612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9e90612b4b565b8015610aeb5780601f10610ac057610100808354040283529160200191610aeb565b820191906000526020600020905b815481529060010190602001808311610ace57829003601f168201915b505050505081526020016002820154815250509050600060028381548110610b1557610b15612b35565b9060005260206000209060030201604051806060016040529081600082018054610b3e90612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6a90612b4b565b8015610bb75780601f10610b8c57610100808354040283529160200191610bb7565b820191906000526020600020905b815481529060010190602001808311610b9a57829003601f168201915b50505050508152602001600182018054610bd090612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfc90612b4b565b8015610c495780601f10610c1e57610100808354040283529160200191610c49565b820191906000526020600020905b815481529060010190602001808311610c2c57829003601f168201915b5050505050815260200160028201548152505090508160028481548110610c7257610c72612b35565b90600052602060002090600302016000820151816000019080519060200190610c9c9291906125a7565b506020828101518051610cb592600185019201906125a7565b50604082015181600201559050508060028581548110610cd757610cd7612b35565b90600052602060002090600302016000820151816000019080519060200190610d019291906125a7565b506020828101518051610d1a92600185019201906125a7565b506040918201516002909101558251825191517f03f1d229173cc08c7c85f7dcd914724184489590489ed1d27b31afb31013506192610d5d929188908890612b85565b60405180910390a150505050565b6004546001600160a01b0316331480610d8e57506000546001600160a01b031633145b610daa5760405162461bcd60e51b815260040161073a90612b06565b60025415610dfa5760405162461bcd60e51b815260206004820152601b60248201527f436c6561722076616c696461746f722061727261792066697273740000000000604482015260640161073a565b8051610e0d9060039060208401906125a7565b507f8ba040512c1273086ac3dc9e59c32b9fc104064d6df4c3747fec10e029bc3fba816040516109589190612bbe565b6004546001600160a01b0316331480610e6057506000546001600160a01b031633145b610e7c5760405162461bcd60e51b815260040161073a90612b06565b600754811115610eda5760405162461bcd60e51b815260206004820152602360248201527f4e6f7420656e6f756768207769746868656c642045544820696e20636f6e74726044820152621858dd60ea1b606482015260840161073a565b8060076000828254610eec9190612bd1565b90915550506040516000906001600160a01b0384169083908381818185875af1925050503d8060008114610f3c576040519150601f19603f3d011682016040523d82523d6000602084013e610f41565b606091505b5050905080610f855760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103a3930b739b332b960811b604482015260640161073a565b826001600160a01b03167f60b677b352dc4c2f8482a85e1557d78515c38e3f3671be950a8357db6f563b9b83604051610fc091815260200190565b60405180910390a2505050565b6004546001600160a01b0316331480610ff057506000546001600160a01b031633145b61100c5760405162461bcd60e51b815260040161073a90612b06565b6002805460018101825560009190915281906003027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0161104d8282612d46565b507f56fee40578122d6872c25c03569653f7c3535363d7c04df91aa93806113b50c1905061107b8280612be8565b600360405161095893929190612e39565b6000611097306106f0565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301523460248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015611125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111499190612eed565b50604051636e553f6560e01b81523460048201526001600160a01b0383811660248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690636e553f65906044016020604051808303816000875af11580156111bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e19190612f0a565b9050600081116112335760405162461bcd60e51b815260206004820152601760248201527f4e6f2073667278455448207761732072657475726e6564000000000000000000604482015260640161073a565b92915050565b611242336106f0565b565b6001546001600160a01b031633146112bc5760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b606482015260840161073a565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6004546001600160a01b031633148061135157506000546001600160a01b031633145b61136d5760405162461bcd60e51b815260040161073a90612b06565b60005460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af11580156113c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e49190612eed565b6114305760405162461bcd60e51b815260206004820152601d60248201527f7265636f76657245524332303a205472616e73666572206661696c6564000000604482015260640161073a565b604080516001600160a01b0384168152602081018390527f2178cd1256ad9200080414ad733212aa6401e6a74954264b7654e671db074f5691015b60405180910390a15050565b61147f61228e565b600954610100900460ff16156114d75760405162461bcd60e51b815260206004820152601860248201527f4465706f736974696e6720455448206973207061757365640000000000000000604482015260640161073a565b60006801bc16d674ec800000600754476114f19190612bd1565b6114fb9190612acc565b90506000811161154d5760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f7567682045544820696e20636f6e7472616374000000000000604482015260640161073a565b60005b818110156116ff576000806000806115666122e7565b935093509350935060088460405161157e9190612f23565b9081526040519081900360200190205460ff16156115de5760405162461bcd60e51b815260206004820152601c60248201527f56616c696461746f7220616c7265616479206861732033322045544800000000604482015260640161073a565b6040516304512a2360e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322895118906801bc16d674ec8000009061163b9088908890889088906004016128dc565b6000604051808303818588803b15801561165457600080fd5b505af1158015611668573d6000803e3d6000fd5b5050505050600160088560405161167f9190612f23565b908152604051908190036020018120805492151560ff19909316929092179091556116ab908590612f23565b60405180910390207f4d312bd9aebc53f5bfad5cc169f41e65030288ef6b769786d43998abfb69a250846040516116e29190612bbe565b60405180910390a250505050806116f890612f3f565b9050611550565b50506112426001600555565b6004546001600160a01b031633148061172e57506000546001600160a01b031633145b61174a5760405162461bcd60e51b815260040161073a90612b06565b6117566002600061262b565b6040517fbf5f94bdb8a562775e85a1990f734d669663e8de3b240d56ec4b1f71ca66b00790600090a1565b6004546001600160a01b03163314806117a457506000546001600160a01b031633145b6117c05760405162461bcd60e51b815260040161073a90612b06565b620f42408111156118135760405162461bcd60e51b815260206004820152601960248201527f526174696f2063616e6e6f742073757270617373203130302500000000000000604482015260640161073a565b60068190556040518181527f9d9f4a1fa43ffde666e23300e98e21e37dccd7f33bb238071f5341a53f346f9390602001610958565b6004546001600160a01b031633148061186b57506000546001600160a01b031633145b6118875760405162461bcd60e51b815260040161073a90612b06565b60005b818110156118ed5760028054806118a3576118a3612f58565b600082815260208120600019909201916003830201906118c3828261264c565b6118d160018301600061264c565b5060006002919091015590556118e681612f3f565b905061188a565b506040518181527f03ed6e686bcf321d69427b429b8e18745c96afc0ba4e6c7eb1f3aefaff088cf390602001610958565b6004546001600160a01b031633148061194157506000546001600160a01b031633145b61195d5760405162461bcd60e51b815260040161073a90612b06565b6009805460ff8082161560ff1990921682179092556040519116151581527f4aff1af3f32e78f88c86566e6b50fe05d6ba3d9c7374e042ac17e5191c5fac56906020015b60405180910390a1565b6060806060600080600286815481106119c6576119c6612b35565b90600052602060002090600302016040518060600160405290816000820180546119ef90612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1b90612b4b565b8015611a685780601f10611a3d57610100808354040283529160200191611a68565b820191906000526020600020905b815481529060010190602001808311611a4b57829003601f168201915b50505050508152602001600182018054611a8190612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054611aad90612b4b565b8015611afa5780601f10611acf57610100808354040283529160200191611afa565b820191906000526020600020905b815481529060010190602001808311611add57829003601f168201915b5050505050815260200160028201548152505090508060000151945060038054611b2390612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054611b4f90612b4b565b8015611b9c5780601f10611b7157610100808354040283529160200191611b9c565b820191906000526020600020905b815481529060010190602001808311611b7f57829003601f168201915b505050505093508060200151925080604001519150509193509193565b6004546001600160a01b0316331480611bdc57506000546001600160a01b031633145b611bf85760405162461bcd60e51b815260040161073a90612b06565b6009805460ff610100808304821615810261ff001990931692909217928390556040517fcead0025c428cc6485390ecd2b3213d7a3d44d3f190a3b880ba9025521365706936119a19390049091161515815260200190565b6004546001600160a01b0316331480611c7357506000546001600160a01b031633145b611c8f5760405162461bcd60e51b815260040161073a90612b06565b6001600160a01b038116611cdd5760405162461bcd60e51b815260206004820152601560248201527416995c9bc81859191c995cdcc819195d1958dd1959605a1b604482015260640161073a565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527ff02fdf7b40fb25784d39342249bbb15cee2bc0288f75ded1cf8ad2e63d4d91aa90602001610958565b610899816106f0565b6004546001600160a01b0316331480611d5757506000546001600160a01b031633145b611d735760405162461bcd60e51b815260040161073a90612b06565b600080546040516001600160a01b039091169083908381818185875af1925050503d8060008114611dc0576040519150601f19603f3d011682016040523d82523d6000602084013e611dc5565b606091505b5050905080611e095760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103a3930b739b332b960811b604482015260640161073a565b6040518281527f040130779a9eeca4469ba7b0c5223a65f424ea2a23f9b9ee336afd7905ef68b49060200161146b565b6004546001600160a01b0316331480611e5c57506000546001600160a01b031633145b611e785760405162461bcd60e51b815260040161073a90612b06565b600060028381548110611e8d57611e8d612b35565b90600052602060002090600302016000018054611ea990612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054611ed590612b4b565b8015611f225780601f10611ef757610100808354040283529160200191611f22565b820191906000526020600020905b815481529060010190602001808311611f0557829003601f168201915b505050505090508115611f9457600254611f449084906102e390600190612bd1565b6002805480611f5557611f55612f58565b60008281526020812060001990920191600383020190611f75828261264c565b611f8360018301600061264c565b6002820160009055505090556121c6565b60006002805480602002602001604051908101604052809291908181526020016000905b828210156121185783829060005260206000209060030201604051806060016040529081600082018054611feb90612b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461201790612b4b565b80156120645780601f1061203957610100808354040283529160200191612064565b820191906000526020600020905b81548152906001019060200180831161204757829003601f168201915b5050505050815260200160018201805461207d90612b4b565b80601f01602080910402602001604051908101604052809291908181526020018280546120a990612b4b565b80156120f65780601f106120cb576101008083540402835291602001916120f6565b820191906000526020600020905b8154815290600101906020018083116120d957829003601f168201915b5050505050815260200160028201548152505081526020019060010190611fb8565b5050505090506002600061212c919061262b565b60005b81518110156121c3578481146121b357600282828151811061215357612153612b35565b60209081029190910181015182546001810184556000938452928290208151805192946003029091019261218c928492909101906125a7565b5060208281015180516121a592600185019201906125a7565b506040820151816002015550505b6121bc81612f3f565b905061212f565b50505b7f0d69d6651f1449a1038428f2773f275a39ef104c76bf46970cdffdbbe1496c518184846040516121f993929190612f6e565b60405180910390a1505050565b6004546001600160a01b031633148061222957506000546001600160a01b031633145b6122455760405162461bcd60e51b815260040161073a90612b06565b8060005b818110156122885761227884848381811061226657612266612b35565b905060200281019061036e9190612f98565b61228181612f3f565b9050612249565b50505050565b6002600554036122e05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161073a565b6002600555565b60608060606000806122f860025490565b90508060000361234a5760405162461bcd60e51b815260206004820152601860248201527f56616c696461746f7220737461636b20697320656d7074790000000000000000604482015260640161073a565b60006002612359600184612bd1565b8154811061236957612369612b35565b906000526020600020906003020160405180606001604052908160008201805461239290612b4b565b80601f01602080910402602001604051908101604052809291908181526020018280546123be90612b4b565b801561240b5780601f106123e05761010080835404028352916020019161240b565b820191906000526020600020905b8154815290600101906020018083116123ee57829003601f168201915b5050505050815260200160018201805461242490612b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461245090612b4b565b801561249d5780601f106124725761010080835404028352916020019161249d565b820191906000526020600020905b81548152906001019060200180831161248057829003601f168201915b50505050508152602001600282015481525050905060028054806124c3576124c3612f58565b600082815260208120600019909201916003830201906124e3828261264c565b6124f160018301600061264c565b600282016000905550509055806000015195506003805461251190612b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461253d90612b4b565b801561258a5780601f1061255f5761010080835404028352916020019161258a565b820191906000526020600020905b81548152906001019060200180831161256d57829003601f168201915b505050505094508060200151935080604001519250505090919293565b8280546125b390612b4b565b90600052602060002090601f0160209004810192826125d5576000855561261b565b82601f106125ee57805160ff191683800117855561261b565b8280016001018555821561261b579182015b8281111561261b578251825591602001919060010190612600565b50612627929150612682565b5090565b50805460008255600302906000526020600020908101906108999190612697565b50805461265890612b4b565b6000825580601f10612668575050565b601f01602090049060005260206000209081019061089991905b5b808211156126275760008155600101612683565b808211156126275760006126ab828261264c565b6126b960018301600061264c565b5060006002820155600301612697565b6001600160a01b038116811461089957600080fd5b6000602082840312156126f057600080fd5b81356126fb816126c9565b9392505050565b6000806040838503121561271557600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261274b57600080fd5b813567ffffffffffffffff8082111561276657612766612724565b604051601f8301601f19908116603f0116810190828211818310171561278e5761278e612724565b816040528381528660208588010111156127a757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156127d957600080fd5b813567ffffffffffffffff8111156127f057600080fd5b6127fc8482850161273a565b949350505050565b6000806040838503121561281757600080fd5b8235612822816126c9565b946020939093013593505050565b60006020828403121561284257600080fd5b813567ffffffffffffffff81111561285957600080fd5b8201606081850312156126fb57600080fd5b60006020828403121561287d57600080fd5b5035919050565b60005b8381101561289f578181015183820152602001612887565b838111156122885750506000910152565b600081518084526128c8816020860160208601612884565b601f01601f19169290920160200192915050565b6080815260006128ef60808301876128b0565b828103602084015261290181876128b0565b9050828103604084015261291581866128b0565b91505082606083015295945050505050565b60008060006060848603121561293c57600080fd5b833567ffffffffffffffff8082111561295457600080fd5b6129608783880161273a565b9450602086013591508082111561297657600080fd5b506129838682870161273a565b925050604084013590509250925092565b6020815260008251606060208401526129b060808401826128b0565b90506020840151601f198483030160408501526129cd82826128b0565b915050604084015160608401528091505092915050565b801515811461089957600080fd5b60008060408385031215612a0557600080fd5b823591506020830135612a17816129e4565b809150509250929050565b60008060208385031215612a3557600080fd5b823567ffffffffffffffff80821115612a4d57600080fd5b818501915085601f830112612a6157600080fd5b813581811115612a7057600080fd5b8660208260051b8501011115612a8557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612ac757612ac7612a97565b500290565b600082612ae957634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612b0157612b01612a97565b500190565b6020808252601590820152744e6f74206f776e6572206f722074696d656c6f636b60581b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680612b5f57607f821691505b602082108103612b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b608081526000612b9860808301876128b0565b8281036020840152612baa81876128b0565b604084019590955250506060015292915050565b6020815260006126fb60208301846128b0565b600082821015612be357612be3612a97565b500390565b6000808335601e19843603018112612bff57600080fd5b83018035915067ffffffffffffffff821115612c1a57600080fd5b602001915036819003821315612c2f57600080fd5b9250929050565b601f821115612c8057600081815260208120601f850160051c81016020861015612c5d5750805b601f850160051c820191505b81811015612c7c57828155600101612c69565b5050505b505050565b67ffffffffffffffff831115612c9d57612c9d612724565b612cb183612cab8354612b4b565b83612c36565b6000601f841160018114612ce55760008515612ccd5750838201355b600019600387901b1c1916600186901b178355612d3f565b600083815260209020601f19861690835b82811015612d165786850135825560209485019460019092019101612cf6565b5086821015612d335760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b612d508283612be8565b67ffffffffffffffff811115612d6857612d68612724565b612d7c81612d768554612b4b565b85612c36565b6000601f821160018114612db05760008315612d985750838201355b600019600385901b1c1916600184901b178555612e0a565b600085815260209020601f19841690835b82811015612de15786850135825560209485019460019092019101612dc1565b5084821015612dfe5760001960f88660031b161c19848701351681555b505060018360011b0185555b50505050612e1b6020830183612be8565b612e29818360018601612c85565b5050604082013560028201555050565b60408152826040820152828460608301376000606084830101526000601f19601f850116820160206060848303018185015260008554612e7881612b4b565b8060608601526080600180841660008114612e9a5760018114612eae57612edc565b60ff1985168884015260a088019550612edc565b8a6000528660002060005b85811015612ed45781548a8201860152908301908801612eb9565b890184019650505b50939b9a5050505050505050505050565b600060208284031215612eff57600080fd5b81516126fb816129e4565b600060208284031215612f1c57600080fd5b5051919050565b60008251612f35818460208701612884565b9190910192915050565b600060018201612f5157612f51612a97565b5060010190565b634e487b7160e01b600052603160045260246000fd5b606081526000612f8160608301866128b0565b602083019490945250901515604090910152919050565b60008235605e19833603018112612f3557600080fdfea2646970667358221220b668a7de9bc24ab49a13e5951cd1134f41a18cf97e575642dfc0860b0d9257fc64736f6c634300080d0033",
    "sourceMap": "1903:7346:36:-:0;;;2657:555;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2902:6;2910:17;2929:21;2902:6;-1:-1:-1;;;;;265:20:33;;257:58;;;;-1:-1:-1;;;257:58:33;;2049:2:43;257:58:33;;;2031:21:43;2088:2;2068:18;;;2061:30;2127:27;2107:18;;;2100:55;2172:18;;257:58:33;;;;;;;;325:5;:14;;-1:-1:-1;;;;;;325:14:33;-1:-1:-1;;;;;325:14:33;;;;;;;354:32;;;2413:34:43;;;2478:2;2463:18;;2456:43;;;;354:32:33;;2348:18:43;354:32:33;;;;;;;-1:-1:-1;1756:16:32::1;:36:::0;;-1:-1:-1;;;;;;1756:36:32::1;-1:-1:-1::0;;;;;1756:36:32;::::1;;::::0;;1802:43;;::::1;::::0;:22:::1;::::0;:43:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;1701:1:8;1806:7;:22;-1:-1:-1;;;;;;;;2962:58:36;;::::1;;::::0;-1:-1:-1;;3030:35:36;;::::1;;::::0;3075:39:::1;;::::0;3140:1:::1;3124:13;:17:::0;;;3183:18:::1;:22:::0;1903:7346;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1903:7346:36;;;-1:-1:-1;1903:7346:36;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:43;93:13;;-1:-1:-1;;;;;135:31:43;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1514;452:6;460;468;476;484;492;545:3;533:9;524:7;520:23;516:33;513:53;;;562:1;559;552:12;513:53;585:40;615:9;585:40;:::i;:::-;575:50;;644:2;665:49;710:2;699:9;695:18;665:49;:::i;:::-;655:59;;733:49;778:2;767:9;763:18;733:49;:::i;:::-;723:59;;801:49;846:2;835:9;831:18;801:49;:::i;:::-;791:59;;869:50;914:3;903:9;899:19;869:50;:::i;:::-;963:3;948:19;;942:26;859:60;;-1:-1:-1;;;;;;1017:14:43;;;1014:34;;;1044:1;1041;1034:12;1014:34;1082:6;1071:9;1067:22;1057:32;;1127:7;1120:4;1116:2;1112:13;1108:27;1098:55;;1149:1;1146;1139:12;1098:55;1178:2;1172:9;1200:2;1196;1193:10;1190:36;;;1206:18;;:::i;:::-;1281:2;1275:9;1249:2;1335:13;;-1:-1:-1;;1331:22:43;;;1355:2;1327:31;1323:40;1311:53;;;1379:18;;;1399:22;;;1376:46;1373:72;;;1425:18;;:::i;:::-;1465:10;1461:2;1454:22;1500:2;1492:6;1485:18;1540:7;1535:2;1530;1526;1522:11;1518:20;1515:33;1512:53;;;1561:1;1558;1551:12;1512:53;1583:1;1574:10;;1593:129;1607:2;1604:1;1601:9;1593:129;;;1695:10;;;1691:19;;1685:26;1664:14;;;1660:23;;1653:59;1618:10;;;;1593:129;;;1740:2;1737:1;1734:9;1731:80;;;1799:1;1794:2;1789;1781:6;1777:15;1773:24;1766:35;1731:80;1830:6;1820:16;;;;;;;;328:1514;;;;;;;;:::o;2510:380::-;2589:1;2585:12;;;;2632;;;2653:61;;2707:4;2699:6;2695:17;2685:27;;2653:61;2760:2;2752:6;2749:14;2729:18;2726:38;2723:161;;2806:10;2801:3;2797:20;2794:1;2787:31;2841:4;2838:1;2831:15;2869:4;2866:1;2859:15;2723:161;;2510:380;;;:::o;:::-;1903:7346:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102135760003560e01c8063a3f3498011610118578063bdacb303116100a0578063d32867d01161006f578063d32867d014610645578063dc6663c71461065c578063e77df3661461067c578063e94ad65b1461069c578063f63a1711146106d057600080fd5b8063bdacb303146105b7578063bfda0c8c146105d7578063c3d31487146105ea578063cdcedf401461060a57600080fd5b8063b5d89627116100e7578063b5d89627146104c3578063b5e5e64c146104f3578063b6d24f1814610508578063ba947f2714610522578063bc9944f91461055657600080fd5b8063a3f3498014610459578063aa6fa83c1461046e578063ae6e83bf1461048e578063b507fb00146104ae57600080fd5b806353a47bb71161019b57806379ba50971161016a57806379ba5097146103d95780638980f11f146103ee5780638da5cb5b1461040e5780638e69d7ad1461042e57806398ea5fca1461044457600080fd5b806353a47bb71461038657806357c59b04146103a65780635bcb2fc6146103bc5780635d593f8d146103c457600080fd5b80633683c204116101e25780633683c204146102e857806336bf3325146103085780633f8380b6146103335780634b9b90c5146103535780634dcd45471461037357600080fd5b80631627540c146102285780631c568db614610248578063206583ac1461029957806335b5d534146102c857600080fd5b3661022357610221336106f0565b005b600080fd5b34801561023457600080fd5b506102216102433660046126de565b61089c565b34801561025457600080fd5b5061027c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102a557600080fd5b506009546102b890610100900460ff1681565b6040519015158152602001610290565b3480156102d457600080fd5b506102216102e3366004612702565b610963565b3480156102f457600080fd5b506102216103033660046127c7565b610d6b565b34801561031457600080fd5b506103256801bc16d674ec80000081565b604051908152602001610290565b34801561033f57600080fd5b5061022161034e366004612804565b610e3d565b34801561035f57600080fd5b5061022161036e366004612830565b610fcd565b6103256103813660046126de565b61108c565b34801561039257600080fd5b5060015461027c906001600160a01b031681565b3480156103b257600080fd5b5061032560065481565b610221611239565b3480156103d057600080fd5b50600254610325565b3480156103e557600080fd5b50610221611244565b3480156103fa57600080fd5b50610221610409366004612804565b61132e565b34801561041a57600080fd5b5060005461027c906001600160a01b031681565b34801561043a57600080fd5b5061032560075481565b34801561045057600080fd5b50610221611477565b34801561046557600080fd5b5061022161170b565b34801561047a57600080fd5b5061022161048936600461286b565b611781565b34801561049a57600080fd5b506102216104a936600461286b565b611848565b3480156104ba57600080fd5b5061022161191e565b3480156104cf57600080fd5b506104e36104de36600461286b565b6119ab565b60405161029094939291906128dc565b3480156104ff57600080fd5b50610221611bb9565b34801561051457600080fd5b506009546102b89060ff1681565b34801561052e57600080fd5b5061027c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561056257600080fd5b506105aa610571366004612927565b60408051606080820183528082526020820152600091810191909152506040805160608101825293845260208401929092529082015290565b6040516102909190612994565b3480156105c357600080fd5b506102216105d23660046126de565b611c50565b6102216105e53660046126de565b611d2b565b3480156105f657600080fd5b5061022161060536600461286b565b611d34565b34801561061657600080fd5b506102b86106253660046127c7565b805160208183018101805160088252928201919093012091525460ff1681565b34801561065157600080fd5b50610325620f424081565b34801561066857600080fd5b5060045461027c906001600160a01b031681565b34801561068857600080fd5b506102216106973660046129f2565b611e39565b3480156106a857600080fd5b5061027c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106dc57600080fd5b506102216106eb366004612a22565b612206565b6106f861228e565b60095460ff16156107435760405162461bcd60e51b815260206004820152601060248201526f14dd589b5a5d081a5cc81c185d5cd95960821b60448201526064015b60405180910390fd5b346000036107855760405162461bcd60e51b815260206004820152600f60248201526e043616e6e6f74207375626d6974203608c1b604482015260640161073a565b604051631a895faf60e21b81526001600160a01b0382811660048301523460248301527f00000000000000000000000000000000000000000000000000000000000000001690636a257ebc90604401600060405180830381600087803b1580156107ee57600080fd5b505af1158015610802573d6000803e3d6000fd5b50505050600060065460001461084857620f4240600654346108249190612aad565b61082e9190612acc565b905080600760008282546108429190612aee565b90915550505b60408051348152602081018390526001600160a01b0384169133917f29b3e86ecfd94a32218997c40b051e650e4fd8c97fc7a4d266be3f7c61c5205b910160405180910390a3506108996001600555565b50565b6000546001600160a01b0316331461090e5760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b606482015260840161073a565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b6004546001600160a01b031633148061098657506000546001600160a01b031633145b6109a25760405162461bcd60e51b815260040161073a90612b06565b6000600283815481106109b7576109b7612b35565b90600052602060002090600302016040518060600160405290816000820180546109e090612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0c90612b4b565b8015610a595780601f10610a2e57610100808354040283529160200191610a59565b820191906000526020600020905b815481529060010190602001808311610a3c57829003601f168201915b50505050508152602001600182018054610a7290612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9e90612b4b565b8015610aeb5780601f10610ac057610100808354040283529160200191610aeb565b820191906000526020600020905b815481529060010190602001808311610ace57829003601f168201915b505050505081526020016002820154815250509050600060028381548110610b1557610b15612b35565b9060005260206000209060030201604051806060016040529081600082018054610b3e90612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6a90612b4b565b8015610bb75780601f10610b8c57610100808354040283529160200191610bb7565b820191906000526020600020905b815481529060010190602001808311610b9a57829003601f168201915b50505050508152602001600182018054610bd090612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfc90612b4b565b8015610c495780601f10610c1e57610100808354040283529160200191610c49565b820191906000526020600020905b815481529060010190602001808311610c2c57829003601f168201915b5050505050815260200160028201548152505090508160028481548110610c7257610c72612b35565b90600052602060002090600302016000820151816000019080519060200190610c9c9291906125a7565b506020828101518051610cb592600185019201906125a7565b50604082015181600201559050508060028581548110610cd757610cd7612b35565b90600052602060002090600302016000820151816000019080519060200190610d019291906125a7565b506020828101518051610d1a92600185019201906125a7565b506040918201516002909101558251825191517f03f1d229173cc08c7c85f7dcd914724184489590489ed1d27b31afb31013506192610d5d929188908890612b85565b60405180910390a150505050565b6004546001600160a01b0316331480610d8e57506000546001600160a01b031633145b610daa5760405162461bcd60e51b815260040161073a90612b06565b60025415610dfa5760405162461bcd60e51b815260206004820152601b60248201527f436c6561722076616c696461746f722061727261792066697273740000000000604482015260640161073a565b8051610e0d9060039060208401906125a7565b507f8ba040512c1273086ac3dc9e59c32b9fc104064d6df4c3747fec10e029bc3fba816040516109589190612bbe565b6004546001600160a01b0316331480610e6057506000546001600160a01b031633145b610e7c5760405162461bcd60e51b815260040161073a90612b06565b600754811115610eda5760405162461bcd60e51b815260206004820152602360248201527f4e6f7420656e6f756768207769746868656c642045544820696e20636f6e74726044820152621858dd60ea1b606482015260840161073a565b8060076000828254610eec9190612bd1565b90915550506040516000906001600160a01b0384169083908381818185875af1925050503d8060008114610f3c576040519150601f19603f3d011682016040523d82523d6000602084013e610f41565b606091505b5050905080610f855760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103a3930b739b332b960811b604482015260640161073a565b826001600160a01b03167f60b677b352dc4c2f8482a85e1557d78515c38e3f3671be950a8357db6f563b9b83604051610fc091815260200190565b60405180910390a2505050565b6004546001600160a01b0316331480610ff057506000546001600160a01b031633145b61100c5760405162461bcd60e51b815260040161073a90612b06565b6002805460018101825560009190915281906003027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0161104d8282612d46565b507f56fee40578122d6872c25c03569653f7c3535363d7c04df91aa93806113b50c1905061107b8280612be8565b600360405161095893929190612e39565b6000611097306106f0565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301523460248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015611125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111499190612eed565b50604051636e553f6560e01b81523460048201526001600160a01b0383811660248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690636e553f65906044016020604051808303816000875af11580156111bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e19190612f0a565b9050600081116112335760405162461bcd60e51b815260206004820152601760248201527f4e6f2073667278455448207761732072657475726e6564000000000000000000604482015260640161073a565b92915050565b611242336106f0565b565b6001546001600160a01b031633146112bc5760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b606482015260840161073a565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6004546001600160a01b031633148061135157506000546001600160a01b031633145b61136d5760405162461bcd60e51b815260040161073a90612b06565b60005460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af11580156113c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e49190612eed565b6114305760405162461bcd60e51b815260206004820152601d60248201527f7265636f76657245524332303a205472616e73666572206661696c6564000000604482015260640161073a565b604080516001600160a01b0384168152602081018390527f2178cd1256ad9200080414ad733212aa6401e6a74954264b7654e671db074f5691015b60405180910390a15050565b61147f61228e565b600954610100900460ff16156114d75760405162461bcd60e51b815260206004820152601860248201527f4465706f736974696e6720455448206973207061757365640000000000000000604482015260640161073a565b60006801bc16d674ec800000600754476114f19190612bd1565b6114fb9190612acc565b90506000811161154d5760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f7567682045544820696e20636f6e7472616374000000000000604482015260640161073a565b60005b818110156116ff576000806000806115666122e7565b935093509350935060088460405161157e9190612f23565b9081526040519081900360200190205460ff16156115de5760405162461bcd60e51b815260206004820152601c60248201527f56616c696461746f7220616c7265616479206861732033322045544800000000604482015260640161073a565b6040516304512a2360e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322895118906801bc16d674ec8000009061163b9088908890889088906004016128dc565b6000604051808303818588803b15801561165457600080fd5b505af1158015611668573d6000803e3d6000fd5b5050505050600160088560405161167f9190612f23565b908152604051908190036020018120805492151560ff19909316929092179091556116ab908590612f23565b60405180910390207f4d312bd9aebc53f5bfad5cc169f41e65030288ef6b769786d43998abfb69a250846040516116e29190612bbe565b60405180910390a250505050806116f890612f3f565b9050611550565b50506112426001600555565b6004546001600160a01b031633148061172e57506000546001600160a01b031633145b61174a5760405162461bcd60e51b815260040161073a90612b06565b6117566002600061262b565b6040517fbf5f94bdb8a562775e85a1990f734d669663e8de3b240d56ec4b1f71ca66b00790600090a1565b6004546001600160a01b03163314806117a457506000546001600160a01b031633145b6117c05760405162461bcd60e51b815260040161073a90612b06565b620f42408111156118135760405162461bcd60e51b815260206004820152601960248201527f526174696f2063616e6e6f742073757270617373203130302500000000000000604482015260640161073a565b60068190556040518181527f9d9f4a1fa43ffde666e23300e98e21e37dccd7f33bb238071f5341a53f346f9390602001610958565b6004546001600160a01b031633148061186b57506000546001600160a01b031633145b6118875760405162461bcd60e51b815260040161073a90612b06565b60005b818110156118ed5760028054806118a3576118a3612f58565b600082815260208120600019909201916003830201906118c3828261264c565b6118d160018301600061264c565b5060006002919091015590556118e681612f3f565b905061188a565b506040518181527f03ed6e686bcf321d69427b429b8e18745c96afc0ba4e6c7eb1f3aefaff088cf390602001610958565b6004546001600160a01b031633148061194157506000546001600160a01b031633145b61195d5760405162461bcd60e51b815260040161073a90612b06565b6009805460ff8082161560ff1990921682179092556040519116151581527f4aff1af3f32e78f88c86566e6b50fe05d6ba3d9c7374e042ac17e5191c5fac56906020015b60405180910390a1565b6060806060600080600286815481106119c6576119c6612b35565b90600052602060002090600302016040518060600160405290816000820180546119ef90612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1b90612b4b565b8015611a685780601f10611a3d57610100808354040283529160200191611a68565b820191906000526020600020905b815481529060010190602001808311611a4b57829003601f168201915b50505050508152602001600182018054611a8190612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054611aad90612b4b565b8015611afa5780601f10611acf57610100808354040283529160200191611afa565b820191906000526020600020905b815481529060010190602001808311611add57829003601f168201915b5050505050815260200160028201548152505090508060000151945060038054611b2390612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054611b4f90612b4b565b8015611b9c5780601f10611b7157610100808354040283529160200191611b9c565b820191906000526020600020905b815481529060010190602001808311611b7f57829003601f168201915b505050505093508060200151925080604001519150509193509193565b6004546001600160a01b0316331480611bdc57506000546001600160a01b031633145b611bf85760405162461bcd60e51b815260040161073a90612b06565b6009805460ff610100808304821615810261ff001990931692909217928390556040517fcead0025c428cc6485390ecd2b3213d7a3d44d3f190a3b880ba9025521365706936119a19390049091161515815260200190565b6004546001600160a01b0316331480611c7357506000546001600160a01b031633145b611c8f5760405162461bcd60e51b815260040161073a90612b06565b6001600160a01b038116611cdd5760405162461bcd60e51b815260206004820152601560248201527416995c9bc81859191c995cdcc819195d1958dd1959605a1b604482015260640161073a565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527ff02fdf7b40fb25784d39342249bbb15cee2bc0288f75ded1cf8ad2e63d4d91aa90602001610958565b610899816106f0565b6004546001600160a01b0316331480611d5757506000546001600160a01b031633145b611d735760405162461bcd60e51b815260040161073a90612b06565b600080546040516001600160a01b039091169083908381818185875af1925050503d8060008114611dc0576040519150601f19603f3d011682016040523d82523d6000602084013e611dc5565b606091505b5050905080611e095760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103a3930b739b332b960811b604482015260640161073a565b6040518281527f040130779a9eeca4469ba7b0c5223a65f424ea2a23f9b9ee336afd7905ef68b49060200161146b565b6004546001600160a01b0316331480611e5c57506000546001600160a01b031633145b611e785760405162461bcd60e51b815260040161073a90612b06565b600060028381548110611e8d57611e8d612b35565b90600052602060002090600302016000018054611ea990612b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054611ed590612b4b565b8015611f225780601f10611ef757610100808354040283529160200191611f22565b820191906000526020600020905b815481529060010190602001808311611f0557829003601f168201915b505050505090508115611f9457600254611f449084906102e390600190612bd1565b6002805480611f5557611f55612f58565b60008281526020812060001990920191600383020190611f75828261264c565b611f8360018301600061264c565b6002820160009055505090556121c6565b60006002805480602002602001604051908101604052809291908181526020016000905b828210156121185783829060005260206000209060030201604051806060016040529081600082018054611feb90612b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461201790612b4b565b80156120645780601f1061203957610100808354040283529160200191612064565b820191906000526020600020905b81548152906001019060200180831161204757829003601f168201915b5050505050815260200160018201805461207d90612b4b565b80601f01602080910402602001604051908101604052809291908181526020018280546120a990612b4b565b80156120f65780601f106120cb576101008083540402835291602001916120f6565b820191906000526020600020905b8154815290600101906020018083116120d957829003601f168201915b5050505050815260200160028201548152505081526020019060010190611fb8565b5050505090506002600061212c919061262b565b60005b81518110156121c3578481146121b357600282828151811061215357612153612b35565b60209081029190910181015182546001810184556000938452928290208151805192946003029091019261218c928492909101906125a7565b5060208281015180516121a592600185019201906125a7565b506040820151816002015550505b6121bc81612f3f565b905061212f565b50505b7f0d69d6651f1449a1038428f2773f275a39ef104c76bf46970cdffdbbe1496c518184846040516121f993929190612f6e565b60405180910390a1505050565b6004546001600160a01b031633148061222957506000546001600160a01b031633145b6122455760405162461bcd60e51b815260040161073a90612b06565b8060005b818110156122885761227884848381811061226657612266612b35565b905060200281019061036e9190612f98565b61228181612f3f565b9050612249565b50505050565b6002600554036122e05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161073a565b6002600555565b60608060606000806122f860025490565b90508060000361234a5760405162461bcd60e51b815260206004820152601860248201527f56616c696461746f7220737461636b20697320656d7074790000000000000000604482015260640161073a565b60006002612359600184612bd1565b8154811061236957612369612b35565b906000526020600020906003020160405180606001604052908160008201805461239290612b4b565b80601f01602080910402602001604051908101604052809291908181526020018280546123be90612b4b565b801561240b5780601f106123e05761010080835404028352916020019161240b565b820191906000526020600020905b8154815290600101906020018083116123ee57829003601f168201915b5050505050815260200160018201805461242490612b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461245090612b4b565b801561249d5780601f106124725761010080835404028352916020019161249d565b820191906000526020600020905b81548152906001019060200180831161248057829003601f168201915b50505050508152602001600282015481525050905060028054806124c3576124c3612f58565b600082815260208120600019909201916003830201906124e3828261264c565b6124f160018301600061264c565b600282016000905550509055806000015195506003805461251190612b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461253d90612b4b565b801561258a5780601f1061255f5761010080835404028352916020019161258a565b820191906000526020600020905b81548152906001019060200180831161256d57829003601f168201915b505050505094508060200151935080604001519250505090919293565b8280546125b390612b4b565b90600052602060002090601f0160209004810192826125d5576000855561261b565b82601f106125ee57805160ff191683800117855561261b565b8280016001018555821561261b579182015b8281111561261b578251825591602001919060010190612600565b50612627929150612682565b5090565b50805460008255600302906000526020600020908101906108999190612697565b50805461265890612b4b565b6000825580601f10612668575050565b601f01602090049060005260206000209081019061089991905b5b808211156126275760008155600101612683565b808211156126275760006126ab828261264c565b6126b960018301600061264c565b5060006002820155600301612697565b6001600160a01b038116811461089957600080fd5b6000602082840312156126f057600080fd5b81356126fb816126c9565b9392505050565b6000806040838503121561271557600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261274b57600080fd5b813567ffffffffffffffff8082111561276657612766612724565b604051601f8301601f19908116603f0116810190828211818310171561278e5761278e612724565b816040528381528660208588010111156127a757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156127d957600080fd5b813567ffffffffffffffff8111156127f057600080fd5b6127fc8482850161273a565b949350505050565b6000806040838503121561281757600080fd5b8235612822816126c9565b946020939093013593505050565b60006020828403121561284257600080fd5b813567ffffffffffffffff81111561285957600080fd5b8201606081850312156126fb57600080fd5b60006020828403121561287d57600080fd5b5035919050565b60005b8381101561289f578181015183820152602001612887565b838111156122885750506000910152565b600081518084526128c8816020860160208601612884565b601f01601f19169290920160200192915050565b6080815260006128ef60808301876128b0565b828103602084015261290181876128b0565b9050828103604084015261291581866128b0565b91505082606083015295945050505050565b60008060006060848603121561293c57600080fd5b833567ffffffffffffffff8082111561295457600080fd5b6129608783880161273a565b9450602086013591508082111561297657600080fd5b506129838682870161273a565b925050604084013590509250925092565b6020815260008251606060208401526129b060808401826128b0565b90506020840151601f198483030160408501526129cd82826128b0565b915050604084015160608401528091505092915050565b801515811461089957600080fd5b60008060408385031215612a0557600080fd5b823591506020830135612a17816129e4565b809150509250929050565b60008060208385031215612a3557600080fd5b823567ffffffffffffffff80821115612a4d57600080fd5b818501915085601f830112612a6157600080fd5b813581811115612a7057600080fd5b8660208260051b8501011115612a8557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612ac757612ac7612a97565b500290565b600082612ae957634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612b0157612b01612a97565b500190565b6020808252601590820152744e6f74206f776e6572206f722074696d656c6f636b60581b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680612b5f57607f821691505b602082108103612b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b608081526000612b9860808301876128b0565b8281036020840152612baa81876128b0565b604084019590955250506060015292915050565b6020815260006126fb60208301846128b0565b600082821015612be357612be3612a97565b500390565b6000808335601e19843603018112612bff57600080fd5b83018035915067ffffffffffffffff821115612c1a57600080fd5b602001915036819003821315612c2f57600080fd5b9250929050565b601f821115612c8057600081815260208120601f850160051c81016020861015612c5d5750805b601f850160051c820191505b81811015612c7c57828155600101612c69565b5050505b505050565b67ffffffffffffffff831115612c9d57612c9d612724565b612cb183612cab8354612b4b565b83612c36565b6000601f841160018114612ce55760008515612ccd5750838201355b600019600387901b1c1916600186901b178355612d3f565b600083815260209020601f19861690835b82811015612d165786850135825560209485019460019092019101612cf6565b5086821015612d335760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b612d508283612be8565b67ffffffffffffffff811115612d6857612d68612724565b612d7c81612d768554612b4b565b85612c36565b6000601f821160018114612db05760008315612d985750838201355b600019600385901b1c1916600184901b178555612e0a565b600085815260209020601f19841690835b82811015612de15786850135825560209485019460019092019101612dc1565b5084821015612dfe5760001960f88660031b161c19848701351681555b505060018360011b0185555b50505050612e1b6020830183612be8565b612e29818360018601612c85565b5050604082013560028201555050565b60408152826040820152828460608301376000606084830101526000601f19601f850116820160206060848303018185015260008554612e7881612b4b565b8060608601526080600180841660008114612e9a5760018114612eae57612edc565b60ff1985168884015260a088019550612edc565b8a6000528660002060005b85811015612ed45781548a8201860152908301908801612eb9565b890184019650505b50939b9a5050505050505050505050565b600060208284031215612eff57600080fd5b81516126fb816129e4565b600060208284031215612f1c57600080fd5b5051919050565b60008251612f35818460208701612884565b9190910192915050565b600060018201612f5157612f51612a97565b5060010190565b634e487b7160e01b600052603160045260246000fd5b606081526000612f8160608301866128b0565b602083019490945250901515604090910152919050565b60008235605e19833603018112612f3557600080fdfea2646970667358221220b668a7de9bc24ab49a13e5951cd1134f41a18cf97e575642dfc0860b0d9257fc64736f6c634300080d0033",
    "sourceMap": "1903:7346:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5187:19;5195:10;5187:7;:19::i;:::-;1903:7346;;;;;399:138:33;;;;;;;;;;-1:-1:-1;399:138:33;;;;;:::i;:::-;;:::i;2545:38:36:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;584:32:43;;;566:51;;554:2;539:18;2545:38:36;;;;;;;;2620:30;;;;;;;;;;-1:-1:-1;2620:30:36;;;;;;;;;;;;;;793:14:43;;786:22;768:41;;756:2;741:18;2620:30:36;628:187:43;2902:421:32;;;;;;;;;;-1:-1:-1;2902:421:32;;;;;:::i;:::-;;:::i;7041:289::-;;;;;;;;;;-1:-1:-1;7041:289:32;;;;;:::i;:::-;;:::i;1972:47:36:-;;;;;;;;;;;;2011:8;1972:47;;;;;2399:25:43;;;2387:2;2372:18;1972:47:36;2253:177:43;7296:370:36;;;;;;;;;;-1:-1:-1;7296:370:36;;;;;:::i;:::-;;:::i;2182:186:32:-;;;;;;;;;;-1:-1:-1;2182:186:32;;;;;:::i;:::-;;:::i;3478:569:36:-;;;;;;:::i;:::-;;:::i;182:29:33:-;;;;;;;;;;-1:-1:-1;182:29:33;;;;-1:-1:-1;;;;;182:29:33;;;2123:28:36;;;;;;;;;;;;;;;;4850:71;;;:::i;7623:96:32:-;;;;;;;;;;-1:-1:-1;7695:10:32;:17;7623:96;;543:266:33;;;;;;;;;;;;;:::i;8467:261:36:-;;;;;;;;;;-1:-1:-1;8467:261:36;;;;;:::i;:::-;;:::i;156:20:33:-;;;;;;;;;;-1:-1:-1;156:20:33;;;;-1:-1:-1;;;;;156:20:33;;;2223:33:36;;;;;;;;;;;;;;;;5345:1488;;;;;;;;;;;;;:::i;7442:126:32:-;;;;;;;;;;;;;:::i;7008:224:36:-;;;;;;;;;;-1:-1:-1;7008:224:36;;;;;:::i;:::-;;:::i;3434:254:32:-;;;;;;;;;;-1:-1:-1;3434:254:32;;;;;:::i;:::-;;:::i;7713:139:36:-;;;;;;;;;;;;;:::i;6019:505:32:-;;;;;;;;;;-1:-1:-1;6019:505:32;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;7919:168:36:-;;;;;;;;;;;;;:::i;2590:24::-;;;;;;;;;;-1:-1:-1;2590:24:36;;;;;;;;2504:35;;;;;;;;;;;;;;;6639:240:32;;;;;;;;;;-1:-1:-1;6639:240:32;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;6827:45:32;;;;;;;;;;;;;;;;;;;;;;;6639:240;;;;;;;;:::i;7767:247::-;;;;;;;;;;-1:-1:-1;7767:247:32;;;;;:::i;:::-;;:::i;4993:94:36:-;;;;;;:::i;:::-;;:::i;8149:228::-;;;;;;;;;;-1:-1:-1;8149:228:36;;;;;:::i;:::-;;:::i;2294:46::-;;;;;;;;;;-1:-1:-1;2294:46:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2057:45;;;;;;;;;;;;2099:3;2057:45;;1606:31:32;;;;;;;;;;-1:-1:-1;1606:31:32;;;;-1:-1:-1;;;;;1606:31:32;;;3851:1221;;;;;;;;;;-1:-1:-1;3851:1221:32;;;;;:::i;:::-;;:::i;2421:49:36:-;;;;;;;;;;;;;;;2586:246:32;;;;;;;;;;-1:-1:-1;2586:246:32;;;;;:::i;:::-;;:::i;4137:633:36:-;2246:21:8;:19;:21::i;:::-;4256:12:36::1;::::0;::::1;;4255:13;4247:42;;;::::0;-1:-1:-1;;;4247:42:36;;7998:2:43;4247:42:36::1;::::0;::::1;7980:21:43::0;8037:2;8017:18;;;8010:30;-1:-1:-1;;;8056:18:43;;;8049:46;8112:18;;4247:42:36::1;;;;;;;;;4307:9;4320:1;4307:14:::0;4299:42:::1;;;::::0;-1:-1:-1;;;4299:42:36;;8343:2:43;4299:42:36::1;::::0;::::1;8325:21:43::0;8382:2;8362:18;;;8355:30;-1:-1:-1;;;8401:18:43;;;8394:45;8456:18;;4299:42:36::1;8141:339:43::0;4299:42:36::1;4386:45;::::0;-1:-1:-1;;;4386:45:36;;-1:-1:-1;;;;;8677:32:43;;;4386:45:36::1;::::0;::::1;8659:51:43::0;4421:9:36::1;8726:18:43::0;;;8719:34;4386:11:36::1;:23;::::0;::::1;::::0;8632:18:43;;4386:45:36::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4497:20;4535:13;;4552:1;4535:18;4531:157;;2099:3;4597:13;;4585:9;:25;;;;:::i;:::-;4584:45;;;;:::i;:::-;4569:60;;4665:12;4643:18;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4531:157:36::1;4703:60;::::0;;4739:9:::1;9598:25:43::0;;9654:2;9639:18;;9632:34;;;-1:-1:-1;;;;;4703:60:36;::::1;::::0;4716:10:::1;::::0;4703:60:::1;::::0;9571:18:43;4703:60:36::1;;;;;;;4195:575;2288:20:8::0;1701:1;2790:7;:22;2610:209;2288:20;4137:633:36;:::o;399:138:33:-;866:5;;-1:-1:-1;;;;;866:5:33;852:10;:19;844:79;;;;-1:-1:-1;;;844:79:33;;9879:2:43;844:79:33;;;9861:21:43;9918:2;9898:18;;;9891:30;9957:34;9937:18;;;9930:62;-1:-1:-1;;;10008:18:43;;;10001:45;10063:19;;844:79:33;9677:411:43;844:79:33;470:14:::1;:23:::0;;-1:-1:-1;;;;;;470:23:33::1;-1:-1:-1::0;;;;;470:23:33;::::1;::::0;;::::1;::::0;;;508:22:::1;::::0;566:51:43;;;508:22:33::1;::::0;554:2:43;539:18;508:22:33::1;;;;;;;;399:138:::0;:::o;2902:421:32:-;1914:16;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;3024:24:::1;3051:10;3062:8;3051:20;;;;;;;;:::i;:::-;;;;;;;;;;;3024:47;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3081:22;3106:10;3117:6;3106:18;;;;;;;;:::i;:::-;;;;;;;;;;;3081:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3190:7;3169:10;3180:6;3169:18;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3169:28:32::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;3230:5;3207:10;3218:8;3207:20;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3207:28:32::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3207:28:32::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;3269:14;;3285:12;;3251:65;;::::1;::::0;::::1;::::0;3269:14;3299:8;;3309:6;;3251:65:::1;:::i;:::-;;;;;;;;2979:344;;2902:421:::0;;:::o;7041:289::-;1914:16;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;7695:10;:17;7151:20;7143:60:::1;;;::::0;-1:-1:-1;;;7143:60:32;;11688:2:43;7143:60:32::1;::::0;::::1;11670:21:43::0;11727:2;11707:18;;;11700:30;11766:29;11746:18;;;11739:57;11813:18;;7143:60:32::1;11486:351:43::0;7143:60:32::1;7213:47:::0;;::::1;::::0;:22:::1;::::0;:47:::1;::::0;::::1;::::0;::::1;:::i;:::-;;7276;7300:22;7276:47;;;;;;:::i;7296:370:36:-:0;1914:16:32;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;7407:18:36::1;;7397:6;:28;;7389:76;;;::::0;-1:-1:-1;;;7389:76:36;;12266:2:43;7389:76:36::1;::::0;::::1;12248:21:43::0;12305:2;12285:18;;;12278:30;12344:34;12324:18;;;12317:62;-1:-1:-1;;;12395:18:43;;;12388:33;12438:19;;7389:76:36::1;12064:399:43::0;7389:76:36::1;7497:6;7475:18;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7532:37:36::1;::::0;7515:12:::1;::::0;-1:-1:-1;;;;;7532:16:36;::::1;::::0;7557:6;;7515:12;7532:37;7515:12;7532:37;7557:6;7532:16;:37:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7514:55;;;7587:7;7579:36;;;::::0;-1:-1:-1;;;7579:36:36;;13010:2:43;7579:36:36::1;::::0;::::1;12992:21:43::0;13049:2;13029:18;;;13022:30;-1:-1:-1;;;13068:18:43;;;13061:46;13124:18;;7579:36:36::1;12808:340:43::0;7579:36:36::1;7648:2;-1:-1:-1::0;;;;;7631:28:36::1;;7652:6;7631:28;;;;2399:25:43::0;;2387:2;2372:18;;2253:177;7631:28:36::1;;;;;;;;7379:287;7296:370:::0;;:::o;2182:186:32:-;1914:16;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;2264:10:::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2264:26:32;;;;2280:9;;2264:26:::1;;::::0;::::1;;2280:9:::0;2264:26;::::1;:::i;:::-;-1:-1:-1::0;2305:56:32::1;::::0;-1:-1:-1;2320:16:32::1;:9:::0;;:16:::1;:::i;:::-;2338:22;2305:56;;;;;;;;:::i;3478:569:36:-:0;3549:14;3641:22;3657:4;3641:7;:22::i;:::-;3723:53;;-1:-1:-1;;;3723:53:36;;-1:-1:-1;;;;;3751:12:36;8677:32:43;;3723:53:36;;;8659:51:43;3766:9:36;8726:18:43;;;8719:34;3723:11:36;:19;;;;8632:18:43;;3723:53:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3898:42:36;;-1:-1:-1;;;3898:42:36;;3919:9;3898:42;;;19105:25:43;-1:-1:-1;;;;;19166:32:43;;;19146:18;;;19139:60;3871:24:36;;3898:12;:20;;;;;;19078:18:43;;3898:42:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3871:69;;3977:1;3958:16;:20;3950:56;;;;-1:-1:-1;;;3950:56:36;;19601:2:43;3950:56:36;;;19583:21:43;19640:2;19620:18;;;19613:30;19679:25;19659:18;;;19652:53;19722:18;;3950:56:36;19399:347:43;3950:56:36;4024:16;3478:569;-1:-1:-1;;3478:569:36:o;4850:71::-;4895:19;4903:10;4895:7;:19::i;:::-;4850:71::o;543:266:33:-;611:14;;-1:-1:-1;;;;;611:14:33;597:10;:28;589:94;;;;-1:-1:-1;;;589:94:33;;19953:2:43;589:94:33;;;19935:21:43;19992:2;19972:18;;;19965:30;20031:34;20011:18;;;20004:62;-1:-1:-1;;;20082:18:43;;;20075:51;20143:19;;589:94:33;19751:417:43;589:94:33;711:5;;;718:14;698:35;;;-1:-1:-1;;;;;711:5:33;;;20385:34:43;;718:14:33;;;;20450:2:43;20435:18;;20428:43;698:35:33;;20320:18:43;698:35:33;;;;;;;751:14;;;;743:22;;-1:-1:-1;;;;;;743:22:33;;;-1:-1:-1;;;;;751:14:33;;743:22;;;;775:27;;;543:266::o;8467:261:36:-;1914:16:32;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;8602:5:36::1;::::0;8572:49:::1;::::0;-1:-1:-1;;;8572:49:36;;-1:-1:-1;;;;;8602:5:36;;::::1;8572:49;::::0;::::1;8659:51:43::0;8726:18;;;8719:34;;;8572:29:36;;::::1;::::0;::::1;::::0;8632:18:43;;8572:49:36::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8564:91;;;::::0;-1:-1:-1;;;8564:91:36;;20684:2:43;8564:91:36::1;::::0;::::1;20666:21:43::0;20723:2;20703:18;;;20696:30;20762:31;20742:18;;;20735:59;20811:18;;8564:91:36::1;20482:353:43::0;8564:91:36::1;8671:50;::::0;;-1:-1:-1;;;;;8677:32:43;;8659:51;;8741:2;8726:18;;8719:34;;;8671:50:36::1;::::0;8632:18:43;8671:50:36::1;;;;;;;;8467:261:::0;;:::o;5345:1488::-;2246:21:8;:19;:21::i;:::-;5441:18:36::1;::::0;::::1;::::0;::::1;;;5440:19;5432:56;;;::::0;-1:-1:-1;;;5432:56:36;;21042:2:43;5432:56:36::1;::::0;::::1;21024:21:43::0;21081:2;21061:18;;;21054:30;21120:26;21100:18;;;21093:54;21164:18;;5432:56:36::1;20840:348:43::0;5432:56:36::1;5565:19;2011:8;5612:18;;5588:21;:42;;;;:::i;:::-;5587:59;;;;:::i;:::-;5565:81;;5678:1;5664:11;:15;5656:54;;;::::0;-1:-1:-1;;;5656:54:36;;21395:2:43;5656:54:36::1;::::0;::::1;21377:21:43::0;21434:2;21414:18;;;21407:30;21473:28;21453:18;;;21446:56;21519:18;;5656:54:36::1;21193:350:43::0;5656:54:36::1;5783:9;5778:1049;5802:11;5798:1;:15;5778:1049;;;5893:19;5930:33:::0;5981:22:::1;6021:23:::0;6061:18:::1;:16;:18::i;:::-;5875:204;;;;;;;;6315:16;6332:6;6315:24;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;6314:25;6306:66;;;::::0;-1:-1:-1;;;6306:66:36;;22029:2:43;6306:66:36::1;::::0;::::1;22011:21:43::0;22068:2;22048:18;;;22041:30;22107;22087:18;;;22080:58;22155:18;;6306:66:36::1;21827:352:43::0;6306:66:36::1;6452:180;::::0;-1:-1:-1;;;6452:180:36;;-1:-1:-1;;;;;6452:15:36::1;:23;::::0;::::1;::::0;2011:8:::1;::::0;6452:180:::1;::::0;6514:6;;6538:20;;6576:9;;6603:15;;6452:180:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;6751:4;6724:16;6741:6;6724:24;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:31;;;::::1;;-1:-1:-1::0;;6724:31:36;;::::1;::::0;;;::::1;::::0;;;6775:41:::1;::::0;6787:6;;6775:41:::1;:::i;:::-;;;;;;;;;6795:20;6775:41;;;;;;:::i;:::-;;;;;;;;5820:1007;;;;5815:3;;;;:::i;:::-;;;5778:1049;;;;5391:1442;2288:20:8::0;1701:1;2790:7;:22;2610:209;7442:126:32;1914:16;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;7505:17:::1;7512:10;;7505:17;:::i;:::-;7538:23;::::0;::::1;::::0;;;::::1;7442:126::o:0;7008:224:36:-;1914:16:32;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;2099:3:36::1;7093:8;:27;;7084:66;;;::::0;-1:-1:-1;;;7084:66:36;;22526:2:43;7084:66:36::1;::::0;::::1;22508:21:43::0;22565:2;22545:18;;;22538:30;22604:27;22584:18;;;22577:55;22649:18;;7084:66:36::1;22324:349:43::0;7084:66:36::1;7160:13;:24:::0;;;7199:26:::1;::::0;2399:25:43;;;7199:26:36::1;::::0;2387:2:43;2372:18;7199:26:36::1;2253:177:43::0;3434:254:32;1914:16;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;3571:9:::1;3566:77;3590:5;3586:1;:9;3566:77;;;3616:10;:16;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;-1:-1:-1;;3616:16:32;;;;::::1;::::0;::::1;;::::0;::::1;::::0;;::::1;:::i;:::-;;;::::0;::::1;;;:::i;:::-;-1:-1:-1::0;3616:16:32::1;;::::0;;;::::1;::::0;;;3597:3:::1;::::0;::::1;:::i;:::-;;;3566:77;;;-1:-1:-1::0;3658:23:32::1;::::0;2399:25:43;;;3658:23:32::1;::::0;2387:2:43;2372:18;3658:23:32::1;2253:177:43::0;7713:139:36;1914:16:32;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;7791:12:36::1;::::0;;::::1;::::0;;::::1;7790:13;-1:-1:-1::0;;7775:28:36;;::::1;::::0;::::1;::::0;;;7819:26:::1;::::0;7832:12;;793:14:43;786:22;768:41;;7819:26:36::1;::::0;756:2:43;741:18;7819:26:36::1;;;;;;;;7713:139::o:0;6019:505:32:-;6110:19;6143:34;6191:22;6227:23;6275:18;6296:10;6307:1;6296:13;;;;;;;;:::i;:::-;;;;;;;;;;;6275:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6375:1;:8;;;6366:17;;6417:22;6393:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6461:1;:11;;;6449:23;;6500:1;:17;;;6482:35;;6265:259;6019:505;;;;;:::o;7919:168:36:-;1914:16:32;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;8008:18:36::1;::::0;;::::1;;::::0;;::::1;::::0;::::1;8007:19;7986:40:::0;::::1;-1:-1:-1::0;;7986:40:36;;::::1;::::0;;;::::1;::::0;;;;8042:38:::1;::::0;::::1;::::0;::::1;::::0;8061:18;::::1;::::0;;::::1;793:14:43::0;786:22;768:41;;756:2;741:18;;628:187;7767:247:32;1914:16;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;-1:-1:-1;;;;;7855:31:32;::::1;7847:65;;;::::0;-1:-1:-1;;;7847:65:32;;23012:2:43;7847:65:32::1;::::0;::::1;22994:21:43::0;23051:2;23031:18;;;23024:30;-1:-1:-1;;;23070:18:43;;;23063:51;23131:18;;7847:65:32::1;22810:345:43::0;7847:65:32::1;7922:16;:36:::0;;-1:-1:-1;;;;;;7922:36:32::1;-1:-1:-1::0;;;;;7922:36:32;::::1;::::0;;::::1;::::0;;;7973:34:::1;::::0;566:51:43;;;7973:34:32::1;::::0;554:2:43;539:18;7973:34:32::1;402:221:43::0;4993:94:36;5062:18;5070:9;5062:7;:18::i;8149:228::-;1914:16:32;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;8220:12:36::1;8245:5:::0;;8237:40:::1;::::0;-1:-1:-1;;;;;8245:5:36;;::::1;::::0;8265:6;;8220:12;8237:40;8220:12;8237:40;8265:6;8245:5;8237:40:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8219:58;;;8295:7;8287:36;;;::::0;-1:-1:-1;;;8287:36:36;;13010:2:43;8287:36:36::1;::::0;::::1;12992:21:43::0;13049:2;13029:18;;;13022:30;-1:-1:-1;;;13068:18:43;;;13061:46;13124:18;;8287:36:36::1;12808:340:43::0;8287:36:36::1;8339:31;::::0;2399:25:43;;;8339:31:36::1;::::0;2387:2:43;2372:18;8339:31:36::1;2253:177:43::0;3851:1221:32;1914:16;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;4040:27:::1;4070:10;4081;4070:22;;;;;;;;:::i;:::-;;;;;;;;;;;:29;;4040:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4152:24;4148:832;;;4302:10;:17:::0;4276:48:::1;::::0;4290:10;;4302:21:::1;::::0;4322:1:::1;::::0;4302:21:::1;:::i;4276:48::-;4424:10;:16;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;-1:-1:-1;;4424:16:32;;;;::::1;::::0;::::1;;::::0;::::1;::::0;;::::1;:::i;:::-;;;::::0;::::1;;;:::i;:::-;;;;;;;;;;;4148:832;;;4551:38;4592:10;4551:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;4674:10;;4667:17;;;;:::i;:::-;4785:9;4780:190;4804:19;:26;4800:1;:30;4780:190;;;4864:10;4859:1;:15;4855:101;;4898:10;4914:19;4934:1;4914:22;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4898:39;;::::1;::::0;::::1;::::0;;-1:-1:-1;4898:39:32;;;;;;;;;;;4914:22;;4898:39:::1;;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;4898:39:32::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;4855:101;4832:3;::::0;::::1;:::i;:::-;;;4780:190;;;;4493:487;4148:832;4995:70;5012:14;5028:10;5040:24;4995:70;;;;;;;;:::i;:::-;;;;;;;;3947:1125;3851:1221:::0;;:::o;2586:246::-;1914:16;;-1:-1:-1;;;;;1914:16:32;1900:10;:30;;:53;;-1:-1:-1;1948:5:32;;-1:-1:-1;;;;;1948:5:32;1934:10;:19;1900:53;1892:87;;;;-1:-1:-1;;;1892:87:32;;;;;;;:::i;:::-;2697:14;2678:16:::1;2728:98;2752:11;2748:1;:15;2728:98;;;2784:31;2797:14;;2812:1;2797:17;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;2784:31::-;2765:3;::::0;::::1;:::i;:::-;;;2728:98;;;;2668:164;2586:246:::0;;:::o;2321:283:8:-;1744:1;2449:7;;:19;2441:63;;;;-1:-1:-1;;;2441:63:8;;24068:2:43;2441:63:8;;;24050:21:43;24107:2;24087:18;;;24080:30;24146:33;24126:18;;;24119:61;24197:18;;2441:63:8;23866:355:43;2441:63:8;1744:1;2579:7;:18;2321:283::o;5186:750:32:-;5261:19;5294:34;5342:22;5378:23;5483:12;5498:15;7695:10;:17;;7623:96;5498:15;5483:30;;5531:7;5542:1;5531:12;5523:49;;;;-1:-1:-1;;;5523:49:32;;24428:2:43;5523:49:32;;;24410:21:43;24467:2;24447:18;;;24440:30;24506:26;24486:18;;;24479:54;24550:18;;5523:49:32;24226:348:43;5523:49:32;5631:23;5657:10;5668:11;5678:1;5668:7;:11;:::i;:::-;5657:23;;;;;;;;:::i;:::-;;;;;;;;;;;5631:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5690:10;:16;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;5690:16:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;5772:6;:13;;;5763:22;;5819;5795:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5863:6;:16;;;5851:28;;5907:6;:22;;;5889:40;;5416:520;;5186:750;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;14:131:43;-1:-1:-1;;;;;89:31:43;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:43:o;820:248::-;888:6;896;949:2;937:9;928:7;924:23;920:32;917:52;;;965:1;962;955:12;917:52;-1:-1:-1;;988:23:43;;;1058:2;1043:18;;;1030:32;;-1:-1:-1;820:248:43:o;1073:127::-;1134:10;1129:3;1125:20;1122:1;1115:31;1165:4;1162:1;1155:15;1189:4;1186:1;1179:15;1205:718;1247:5;1300:3;1293:4;1285:6;1281:17;1277:27;1267:55;;1318:1;1315;1308:12;1267:55;1354:6;1341:20;1380:18;1417:2;1413;1410:10;1407:36;;;1423:18;;:::i;:::-;1498:2;1492:9;1466:2;1552:13;;-1:-1:-1;;1548:22:43;;;1572:2;1544:31;1540:40;1528:53;;;1596:18;;;1616:22;;;1593:46;1590:72;;;1642:18;;:::i;:::-;1682:10;1678:2;1671:22;1717:2;1709:6;1702:18;1763:3;1756:4;1751:2;1743:6;1739:15;1735:26;1732:35;1729:55;;;1780:1;1777;1770:12;1729:55;1844:2;1837:4;1829:6;1825:17;1818:4;1810:6;1806:17;1793:54;1891:1;1884:4;1879:2;1871:6;1867:15;1863:26;1856:37;1911:6;1902:15;;;;;;1205:718;;;;:::o;1928:320::-;1996:6;2049:2;2037:9;2028:7;2024:23;2020:32;2017:52;;;2065:1;2062;2055:12;2017:52;2105:9;2092:23;2138:18;2130:6;2127:30;2124:50;;;2170:1;2167;2160:12;2124:50;2193:49;2234:7;2225:6;2214:9;2210:22;2193:49;:::i;:::-;2183:59;1928:320;-1:-1:-1;;;;1928:320:43:o;2435:323::-;2511:6;2519;2572:2;2560:9;2551:7;2547:23;2543:32;2540:52;;;2588:1;2585;2578:12;2540:52;2627:9;2614:23;2646:31;2671:5;2646:31;:::i;:::-;2696:5;2748:2;2733:18;;;;2720:32;;-1:-1:-1;;;2435:323:43:o;2763:389::-;2852:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:52;;;2921:1;2918;2911:12;2873:52;2961:9;2948:23;2994:18;2986:6;2983:30;2980:50;;;3026:1;3023;3016:12;2980:50;3049:22;;3105:2;3087:16;;;3083:25;3080:45;;;3121:1;3118;3111:12;3685:180;3744:6;3797:2;3785:9;3776:7;3772:23;3768:32;3765:52;;;3813:1;3810;3803:12;3765:52;-1:-1:-1;3836:23:43;;3685:180;-1:-1:-1;3685:180:43:o;3870:258::-;3942:1;3952:113;3966:6;3963:1;3960:13;3952:113;;;4042:11;;;4036:18;4023:11;;;4016:39;3988:2;3981:10;3952:113;;;4083:6;4080:1;4077:13;4074:48;;;-1:-1:-1;;4118:1:43;4100:16;;4093:27;3870:258::o;4133:257::-;4174:3;4212:5;4206:12;4239:6;4234:3;4227:19;4255:63;4311:6;4304:4;4299:3;4295:14;4288:4;4281:5;4277:16;4255:63;:::i;:::-;4372:2;4351:15;-1:-1:-1;;4347:29:43;4338:39;;;;4379:4;4334:50;;4133:257;-1:-1:-1;;4133:257:43:o;4395:610::-;4662:3;4651:9;4644:22;4625:4;4689:45;4729:3;4718:9;4714:19;4706:6;4689:45;:::i;:::-;4782:9;4774:6;4770:22;4765:2;4754:9;4750:18;4743:50;4816:32;4841:6;4833;4816:32;:::i;:::-;4802:46;;4896:9;4888:6;4884:22;4879:2;4868:9;4864:18;4857:50;4924:32;4949:6;4941;4924:32;:::i;:::-;4916:40;;;4992:6;4987:2;4976:9;4972:18;4965:34;4395:610;;;;;;;:::o;5234:607::-;5329:6;5337;5345;5398:2;5386:9;5377:7;5373:23;5369:32;5366:52;;;5414:1;5411;5404:12;5366:52;5454:9;5441:23;5483:18;5524:2;5516:6;5513:14;5510:34;;;5540:1;5537;5530:12;5510:34;5563:49;5604:7;5595:6;5584:9;5580:22;5563:49;:::i;:::-;5553:59;;5665:2;5654:9;5650:18;5637:32;5621:48;;5694:2;5684:8;5681:16;5678:36;;;5710:1;5707;5700:12;5678:36;;5733:51;5776:7;5765:8;5754:9;5750:24;5733:51;:::i;:::-;5723:61;;;5831:2;5820:9;5816:18;5803:32;5793:42;;5234:607;;;;;:::o;5846:624::-;6031:2;6020:9;6013:21;5994:4;6069:6;6063:13;6112:4;6107:2;6096:9;6092:18;6085:32;6140:51;6186:3;6175:9;6171:19;6157:12;6140:51;:::i;:::-;6126:65;;6240:2;6232:6;6228:15;6222:22;6312:2;6308:7;6296:9;6288:6;6284:22;6280:36;6275:2;6264:9;6260:18;6253:64;6340:40;6373:6;6357:14;6340:40;:::i;:::-;6326:54;;;6436:2;6428:6;6424:15;6418:22;6411:4;6400:9;6396:20;6389:52;6458:6;6450:14;;;5846:624;;;;:::o;6475:118::-;6561:5;6554:13;6547:21;6540:5;6537:32;6527:60;;6583:1;6580;6573:12;6598:309;6663:6;6671;6724:2;6712:9;6703:7;6699:23;6695:32;6692:52;;;6740:1;6737;6730:12;6692:52;6776:9;6763:23;6753:33;;6836:2;6825:9;6821:18;6808:32;6849:28;6871:5;6849:28;:::i;:::-;6896:5;6886:15;;;6598:309;;;;;:::o;7146:645::-;7262:6;7270;7323:2;7311:9;7302:7;7298:23;7294:32;7291:52;;;7339:1;7336;7329:12;7291:52;7379:9;7366:23;7408:18;7449:2;7441:6;7438:14;7435:34;;;7465:1;7462;7455:12;7435:34;7503:6;7492:9;7488:22;7478:32;;7548:7;7541:4;7537:2;7533:13;7529:27;7519:55;;7570:1;7567;7560:12;7519:55;7610:2;7597:16;7636:2;7628:6;7625:14;7622:34;;;7652:1;7649;7642:12;7622:34;7705:7;7700:2;7690:6;7687:1;7683:14;7679:2;7675:23;7671:32;7668:45;7665:65;;;7726:1;7723;7716:12;7665:65;7757:2;7749:11;;;;;7779:6;;-1:-1:-1;7146:645:43;;-1:-1:-1;;;;7146:645:43:o;8764:127::-;8825:10;8820:3;8816:20;8813:1;8806:31;8856:4;8853:1;8846:15;8880:4;8877:1;8870:15;8896:168;8936:7;9002:1;8998;8994:6;8990:14;8987:1;8984:21;8979:1;8972:9;8965:17;8961:45;8958:71;;;9009:18;;:::i;:::-;-1:-1:-1;9049:9:43;;8896:168::o;9069:217::-;9109:1;9135;9125:132;;9179:10;9174:3;9170:20;9167:1;9160:31;9214:4;9211:1;9204:15;9242:4;9239:1;9232:15;9125:132;-1:-1:-1;9271:9:43;;9069:217::o;9291:128::-;9331:3;9362:1;9358:6;9355:1;9352:13;9349:39;;;9368:18;;:::i;:::-;-1:-1:-1;9404:9:43;;9291:128::o;10093:345::-;10295:2;10277:21;;;10334:2;10314:18;;;10307:30;-1:-1:-1;;;10368:2:43;10353:18;;10346:51;10429:2;10414:18;;10093:345::o;10443:127::-;10504:10;10499:3;10495:20;10492:1;10485:31;10535:4;10532:1;10525:15;10559:4;10556:1;10549:15;10575:380;10654:1;10650:12;;;;10697;;;10718:61;;10772:4;10764:6;10760:17;10750:27;;10718:61;10825:2;10817:6;10814:14;10794:18;10791:38;10788:161;;10871:10;10866:3;10862:20;10859:1;10852:31;10906:4;10903:1;10896:15;10934:4;10931:1;10924:15;10788:161;;10575:380;;;:::o;10960:521::-;11209:3;11198:9;11191:22;11172:4;11236:45;11276:3;11265:9;11261:19;11253:6;11236:45;:::i;:::-;11329:9;11321:6;11317:22;11312:2;11301:9;11297:18;11290:50;11357:32;11382:6;11374;11357:32;:::i;:::-;11420:2;11405:18;;11398:34;;;;-1:-1:-1;;11463:2:43;11448:18;11441:34;11349:40;10960:521;-1:-1:-1;;10960:521:43:o;11842:217::-;11989:2;11978:9;11971:21;11952:4;12009:44;12049:2;12038:9;12034:18;12026:6;12009:44;:::i;12468:125::-;12508:4;12536:1;12533;12530:8;12527:34;;;12541:18;;:::i;:::-;-1:-1:-1;12578:9:43;;12468:125::o;13153:521::-;13230:4;13236:6;13296:11;13283:25;13390:2;13386:7;13375:8;13359:14;13355:29;13351:43;13331:18;13327:68;13317:96;;13409:1;13406;13399:12;13317:96;13436:33;;13488:20;;;-1:-1:-1;13531:18:43;13520:30;;13517:50;;;13563:1;13560;13553:12;13517:50;13596:4;13584:17;;-1:-1:-1;13627:14:43;13623:27;;;13613:38;;13610:58;;;13664:1;13661;13654:12;13610:58;13153:521;;;;;:::o;13804:544::-;13905:2;13900:3;13897:11;13894:448;;;13941:1;13966:5;13962:2;13955:17;14011:4;14007:2;13997:19;14081:2;14069:10;14065:19;14062:1;14058:27;14052:4;14048:38;14117:4;14105:10;14102:20;14099:47;;;-1:-1:-1;14140:4:43;14099:47;14195:2;14190:3;14186:12;14183:1;14179:20;14173:4;14169:31;14159:41;;14250:82;14268:2;14261:5;14258:13;14250:82;;;14313:17;;;14294:1;14283:13;14250:82;;;14254:3;;;13894:448;13804:544;;;:::o;14524:1186::-;14630:18;14625:3;14622:27;14619:53;;;14652:18;;:::i;:::-;14681:93;14770:3;14730:38;14762:4;14756:11;14730:38;:::i;:::-;14724:4;14681:93;:::i;:::-;14800:1;14825:2;14820:3;14817:11;14842:1;14837:615;;;;15496:1;15513:3;15510:93;;;-1:-1:-1;15569:19:43;;;15556:33;15510:93;-1:-1:-1;;14481:1:43;14477:11;;;14473:24;14469:29;14459:40;14505:1;14501:11;;;14456:57;15616:78;;14810:894;;14837:615;13751:1;13744:14;;;13788:4;13775:18;;-1:-1:-1;;14873:17:43;;;14973:9;14995:229;15009:7;15006:1;15003:14;14995:229;;;15098:19;;;15085:33;15070:49;;15205:4;15190:20;;;;15158:1;15146:14;;;;15025:12;14995:229;;;14999:3;15252;15243:7;15240:16;15237:159;;;15376:1;15372:6;15366:3;15360;15357:1;15353:11;15349:21;15345:34;15341:39;15328:9;15323:3;15319:19;15306:33;15302:79;15294:6;15287:95;15237:159;;;15439:1;15433:3;15430:1;15426:11;15422:19;15416:4;15409:33;14810:894;;;14524:1186;;;:::o;15715:1728::-;15892:55;15941:5;15934;15892:55;:::i;:::-;15977:18;15962:13;15959:37;15956:63;;;15999:18;;:::i;:::-;16028:103;16117:13;16077:38;16109:4;16103:11;16077:38;:::i;:::-;16071:4;16028:103;:::i;:::-;16157:1;16192:2;16177:13;16174:21;16209:1;16204:671;;;;16921:1;16938:13;16935:113;;;-1:-1:-1;17006:27:43;;;16993:41;16935:113;-1:-1:-1;;14481:1:43;14477:11;;;14473:24;14469:29;14459:40;14505:1;14501:11;;;14456:57;17061:90;;16167:994;;16204:671;13751:1;13744:14;;;13788:4;13775:18;;-1:-1:-1;;16240:27:43;;;16350:9;16372:237;16386:7;16383:1;16380:14;16372:237;;;16475:27;;;16462:41;16447:57;;16590:4;16575:20;;;;16543:1;16531:14;;;;16402:12;16372:237;;;16376:3;16637:13;16628:7;16625:26;16622:187;;;16789:1;16785:6;16779:3;16763:13;16760:1;16756:21;16752:31;16748:44;16744:49;16731:9;16718:11;16714:27;16701:41;16697:97;16689:6;16682:113;16622:187;;;16862:1;16846:13;16843:1;16839:21;16835:29;16829:4;16822:43;16167:994;;;;;17206:64;17266:2;17259:5;17255:14;17248:5;17206:64;:::i;:::-;17279:99;17364:13;17349;17345:1;17339:4;17335:12;17279:99;:::i;:::-;;;17432:2;17425:5;17421:14;17408:28;17404:1;17398:4;17394:12;17387:50;15715:1728;;:::o;17448:1228::-;17648:2;17637:9;17630:21;17687:6;17682:2;17671:9;17667:18;17660:34;17744:6;17736;17731:2;17720:9;17716:18;17703:48;17800:1;17795:2;17786:6;17775:9;17771:22;17767:31;17760:42;17611:4;17861:2;17857:7;17852:2;17844:6;17840:15;17836:29;17825:9;17821:45;17885:4;17949:2;17937:9;17933:2;17929:18;17925:27;17920:2;17909:9;17905:18;17898:55;17973:1;18006:6;18000:13;18036:36;18062:9;18036:36;:::i;:::-;18101:6;18096:2;18092;18088:11;18081:27;18127:3;18149:1;18181:2;18170:9;18166:18;18198:1;18193:108;;;;18315:1;18310:340;;;;18159:491;;18193:108;-1:-1:-1;;18234:24:43;;18221:11;;;18214:45;18287:3;18279:12;;;-1:-1:-1;18193:108:43;;18310:340;18341:6;18338:1;18331:17;18389:2;18386:1;18376:16;18414:1;18428:173;18442:6;18439:1;18436:13;18428:173;;;18528:14;;18511:10;;;18507:19;;18500:43;18571:16;;;;18457:10;;18428:173;;;18625:10;;18621:19;;;-1:-1:-1;;18159:491:43;-1:-1:-1;18667:3:43;;17448:1228;-1:-1:-1;;;;;;;;;;;17448:1228:43:o;18681:245::-;18748:6;18801:2;18789:9;18780:7;18776:23;18772:32;18769:52;;;18817:1;18814;18807:12;18769:52;18849:9;18843:16;18868:28;18890:5;18868:28;:::i;19210:184::-;19280:6;19333:2;19321:9;19312:7;19308:23;19304:32;19301:52;;;19349:1;19346;19339:12;19301:52;-1:-1:-1;19372:16:43;;19210:184;-1:-1:-1;19210:184:43:o;21548:274::-;21677:3;21715:6;21709:13;21731:53;21777:6;21772:3;21765:4;21757:6;21753:17;21731:53;:::i;:::-;21800:16;;;;;21548:274;-1:-1:-1;;21548:274:43:o;22184:135::-;22223:3;22244:17;;;22241:43;;22264:18;;:::i;:::-;-1:-1:-1;22311:1:43;22300:13;;22184:135::o;22678:127::-;22739:10;22734:3;22730:20;22727:1;22720:31;22770:4;22767:1;22760:15;22794:4;22791:1;22784:15;23160:369;23357:2;23346:9;23339:21;23320:4;23377:44;23417:2;23406:9;23402:18;23394:6;23377:44;:::i;:::-;23452:2;23437:18;;23430:34;;;;-1:-1:-1;23507:14:43;;23500:22;23495:2;23480:18;;;23473:50;23369:52;23160:369;-1:-1:-1;23160:369:43:o;23534:327::-;23630:4;23688:11;23675:25;23782:2;23778:7;23767:8;23751:14;23747:29;23743:43;23723:18;23719:68;23709:96;;23801:1;23798;23791:12",
    "linkReferences": {},
    "immutableReferences": {
      "29544": [
        {
          "start": 1710,
          "length": 32
        },
        {
          "start": 5621,
          "length": 32
        }
      ],
      "29547": [
        {
          "start": 1332,
          "length": 32
        },
        {
          "start": 1962,
          "length": 32
        },
        {
          "start": 4316,
          "length": 32
        }
      ],
      "29550": [
        {
          "start": 602,
          "length": 32
        },
        {
          "start": 4270,
          "length": 32
        },
        {
          "start": 4466,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEPOSIT_SIZE()": "36bf3325",
    "RATIO_PRECISION()": "d32867d0",
    "acceptOwnership()": "79ba5097",
    "activeValidators(bytes)": "cdcedf40",
    "addValidator((bytes,bytes,bytes32))": "4b9b90c5",
    "addValidators((bytes,bytes,bytes32)[])": "f63a1711",
    "clearValidatorArray()": "a3f34980",
    "currentWithheldETH()": "8e69d7ad",
    "depositContract()": "e94ad65b",
    "depositEther()": "98ea5fca",
    "depositEtherPaused()": "206583ac",
    "frxETHToken()": "ba947f27",
    "getValidator(uint256)": "b5d89627",
    "getValidatorStruct(bytes,bytes,bytes32)": "bc9944f9",
    "moveWithheldETH(address,uint256)": "3f8380b6",
    "nominateNewOwner(address)": "1627540c",
    "nominatedOwner()": "53a47bb7",
    "numValidators()": "5d593f8d",
    "owner()": "8da5cb5b",
    "popValidators(uint256)": "ae6e83bf",
    "recoverERC20(address,uint256)": "8980f11f",
    "recoverEther(uint256)": "c3d31487",
    "removeValidator(uint256,bool)": "e77df366",
    "setTimelock(address)": "bdacb303",
    "setWithdrawalCredential(bytes)": "3683c204",
    "setWithholdRatio(uint256)": "aa6fa83c",
    "sfrxETHToken()": "1c568db6",
    "submit()": "5bcb2fc6",
    "submitAndDeposit(address)": "4dcd4547",
    "submitAndGive(address)": "bfda0c8c",
    "submitPaused()": "b6d24f18",
    "swapValidator(uint256,uint256)": "35b5d534",
    "timelock_address()": "dc6663c7",
    "togglePauseDepositEther()": "b5e5e64c",
    "togglePauseSubmits()": "b507fb00",
    "withholdRatio()": "57c59b04"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"frxETHAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sfrxETHAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_timelock_address\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_withdrawalCredential\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"new_status\",\"type\":\"bool\"}],\"name\":\"DepositEtherPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"withdrawalCredential\",\"type\":\"bytes\"}],\"name\":\"DepositSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sent_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withheld_amt\",\"type\":\"uint256\"}],\"name\":\"ETHSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"EmergencyERC20Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyEtherRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"KeysCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"new_status\",\"type\":\"bool\"}],\"name\":\"SubmitPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"timelock_address\",\"type\":\"address\"}],\"name\":\"TimelockChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"withdrawalCredential\",\"type\":\"bytes\"}],\"name\":\"ValidatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ValidatorArrayCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remove_idx\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"dont_care_about_ordering\",\"type\":\"bool\"}],\"name\":\"ValidatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"times\",\"type\":\"uint256\"}],\"name\":\"ValidatorsPopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"from_pubKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"to_pubKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"from_idx\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"to_idx\",\"type\":\"uint256\"}],\"name\":\"ValidatorsSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_withdrawalCredential\",\"type\":\"bytes\"}],\"name\":\"WithdrawalCredentialSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithheldETHMoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRatio\",\"type\":\"uint256\"}],\"name\":\"WithholdRatioSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPOSIT_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATIO_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"activeValidators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct OperatorRegistry.Validator\",\"name\":\"validator\",\"type\":\"tuple\"}],\"name\":\"addValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct OperatorRegistry.Validator[]\",\"name\":\"validatorArray\",\"type\":\"tuple[]\"}],\"name\":\"addValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearValidatorArray\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWithheldETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositContract\",\"outputs\":[{\"internalType\":\"contract IDepositContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEtherPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxETHToken\",\"outputs\":[{\"internalType\":\"contract frxETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getValidator\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"withdrawalCredentials\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"name\":\"getValidatorStruct\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct OperatorRegistry.Validator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"moveWithheldETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"times\",\"type\":\"uint256\"}],\"name\":\"popValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"remove_idx\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"dont_care_about_ordering\",\"type\":\"bool\"}],\"name\":\"removeValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timelock_address\",\"type\":\"address\"}],\"name\":\"setTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_new_withdrawal_pubkey\",\"type\":\"bytes\"}],\"name\":\"setWithdrawalCredential\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRatio\",\"type\":\"uint256\"}],\"name\":\"setWithholdRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sfrxETHToken\",\"outputs\":[{\"internalType\":\"contract IsfrxETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"submitAndDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"submitAndGive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submitPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to_idx\",\"type\":\"uint256\"}],\"name\":\"swapValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePauseDepositEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePauseSubmits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withholdRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Has permission to mint frxETH.  Once +32 ETH has accumulated, adds it to a validator, which then deposits it for ETH 2.0 staking (depositEther()) Withhold ratio refers to what percentage of ETH this contract keeps whenever a user makes a deposit. 0% is kept initially \",\"kind\":\"dev\",\"methods\":{\"addValidator((bytes,bytes,bytes32))\":{\"details\":\"You should verify offchain that the validator is indeed valid before adding it Reason we don't do that here is for gas \"},\"addValidators((bytes,bytes,bytes32)[])\":{\"details\":\"You should verify offchain that the validators are indeed valid before adding them Reason we don't do that here is for gas \"},\"clearValidatorArray()\":{\"details\":\"Need to do this before setWithdrawalCredential()\"},\"depositEther()\":{\"details\":\"Usually a bot will call this periodically\"},\"setWithdrawalCredential(bytes)\":{\"details\":\"May need to call clearValidatorArray() first\"},\"setWithholdRatio(uint256)\":{\"params\":{\"newRatio\":\"of ETH that is sent to deposit contract vs withheld, 1e6 precision\"}},\"submitAndDeposit(address)\":{\"details\":\"Could try using EIP-712 / EIP-2612 here in the future if you replace this contract, but you might run into msg.sender vs tx.origin issues with the ERC4626 \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"clearValidatorArray()\":{\"notice\":\"Empties the validator array\"},\"depositEther()\":{\"notice\":\"Deposit batches of ETH to the ETH 2.0 deposit contract\"},\"getValidator(uint256)\":{\"notice\":\"Return the information of the i'th validator in the registry\"},\"getValidatorStruct(bytes,bytes,bytes32)\":{\"notice\":\"Returns a Validator struct of the given inputs to make formatting addValidator inputs easier\"},\"moveWithheldETH(address,uint256)\":{\"notice\":\"Give the withheld ETH to the \\\"to\\\" address\"},\"numValidators()\":{\"notice\":\"Returns the number of validators\"},\"popValidators(uint256)\":{\"notice\":\"Remove validators from the end of the validators array, in case they were added in error\"},\"recoverERC20(address,uint256)\":{\"notice\":\"For emergencies if someone accidentally sent some ERC20 tokens here\"},\"recoverEther(uint256)\":{\"notice\":\"For emergencies if something gets stuck\"},\"removeValidator(uint256,bool)\":{\"notice\":\"Remove a validator from the array. If dont_care_about_ordering is true,   a swap and pop will occur instead of a more gassy loop \"},\"setTimelock(address)\":{\"notice\":\"Set the timelock contract\"},\"setWithdrawalCredential(bytes)\":{\"notice\":\"Requires empty validator stack as changing withdrawal creds invalidates signature\"},\"setWithholdRatio(uint256)\":{\"notice\":\"An input of 1e6 results in 100% of Eth deposited, 0% withheld\"},\"submit()\":{\"notice\":\"Mint frxETH to the sender depending on the ETH value sent\"},\"submitAndGive(address)\":{\"notice\":\"Mint frxETH to the recipient using sender's funds\"},\"swapValidator(uint256,uint256)\":{\"notice\":\"Swap the location of one validator with another\"},\"togglePauseDepositEther()\":{\"notice\":\"Toggle allowing depositing ETH to validators\"},\"togglePauseSubmits()\":{\"notice\":\"Toggle allowing submites\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/frxETHMinter.sol\":\"frxETHMinter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ERC4626/=lib/ERC4626/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x6e3ba605a09b2cf6ab80fa9e4159b1e9f0f49bd8927032c3251a099e96ed54bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05bb933ff14dd2a81c37c1d7b4992df8034107ca5edd60cf8e5a20dc566d3b72\",\"dweb:/ipfs/QmbDdZDWqkRdLtG6AFutDNzF9d2vyVFDJmVSbnVKQ6nPHH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x66795a58157bf230b93d604fe7e6b51acb409eb9e5b98333809162f17ab3208d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://130e7ebcc7af0c2b9cac5709d9509ffd210d8e4f60f9dcea6af1a36d9b84db51\",\"dweb:/ipfs/QmZBhpEVBvGQpFEQE4xSwFGCJrYwXUuVMbspzXMWGizmEj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3\",\"dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x852987c093178595e02298b72a5f3c09aee541604b9e24a3a550bc63d92f3a22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9b51f6bbe233c5ad5aa9dd2d09e1dc2f7e5b7a8007ad6d0a1c4cdd8e913d157\",\"dweb:/ipfs/QmNZz3XegYagUgKBPBNeMuPZQNwmYd6j7GbwTFU1T6ZsD2\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"src/DepositContract.sol\":{\"keccak256\":\"0xd60bd73a63501072690cc86150951060ad9939c85213607efe3f8f306b406bd3\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://1336744117a21919c0ad8ba4e8d35f29a35834a7df337b597b9856e3548fca9e\",\"dweb:/ipfs/QmUpFnKCDYcfRZKVR1DkCcbv3XxYTHicuvauNWyQ7uXiUa\"]},\"src/ERC20/ERC20PermitPermissionedMint.sol\":{\"keccak256\":\"0x0dceb590245da998cf5cb2892676e72a8f6e98bdcf8ad5c96e23de14eada2a1a\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e5e02fee2aaa4ba0627debd16589bd39098774234910ba32e82f6833127de9c7\",\"dweb:/ipfs/QmfNu192ZP29WUwNnvSTneoMeAX27Y4rD6kfLoNRwXxq85\"]},\"src/IsfrxETH.sol\":{\"keccak256\":\"0xc8d6e2c4f35293705c55c72a6c5b24001d1eecb245af02553877576b7b9dd01b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://667c2c8151c8f9a31595ac98bfa25c560ec7de023c022f048736be4bff4edeed\",\"dweb:/ipfs/QmU6idtA1W3vDBbB7GasHAx8LzhNMp6R8aoiW9g2jAfhVJ\"]},\"src/OperatorRegistry.sol\":{\"keccak256\":\"0x6f8b1943669ded0209616d6a2c4b48f348f8450f3006448081d76ceecaaeb8bc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b5dc60446ecfe2b745a3aacbb7342e1d2e3c65f93350992c487f3ddfb3b65410\",\"dweb:/ipfs/QmeQEyTGGVdmexBdC6vYhPu9Pcofm6M4od7uq41j4V39Jn\"]},\"src/Utils/Owned.sol\":{\"keccak256\":\"0xf250cc7b5663d822af1292ffac8f246cd2f7b785b510c1a2b702d38ae9ee6688\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e5afe4d43c5cb6aa7c6a91313ed9e25a38560c17e60da476ff872c65fc821fbe\",\"dweb:/ipfs/QmYGA2R5uj9td5wfoN4R2uuLY87rSDBHhETBHKRyaBiQL8\"]},\"src/frxETH.sol\":{\"keccak256\":\"0x898bd5d6c2bcc319d98f600763e0f33b1ee3bfb4bd59bd9979077bf9653ec376\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://79a5ff06151f1c86aa86ac86e4fe1facd62b5cd98c62cb63aa3e3b26ec23bf78\",\"dweb:/ipfs/QmQrVcZ491gBWHC6d4HKpmXPRNuStq2i2bjEZ84jBKrQXm\"]},\"src/frxETHMinter.sol\":{\"keccak256\":\"0x79e1dbce1c0430fe1688ce1253fce9abf66563a56db8134b3cfec54e1af65152\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://234905011ea479048bc576a25e11fd4b1576cc418cae9b2d69875fcf3a10c1fc\",\"dweb:/ipfs/QmXBCuH8MAZUniw3j7EzSqEAxDs2QcydQdck3JJi2jmA7x\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositContractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "frxETHAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sfrxETHAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_timelock_address",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_withdrawalCredential",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "new_status",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositEtherPaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "withdrawalCredential",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositSent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sent_amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "withheld_amt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHSubmitted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EmergencyERC20Recovered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EmergencyEtherRecovered",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "KeysCleared",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnerNominated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "new_status",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubmitPaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "timelock_address",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TimelockChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "withdrawalCredential",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ValidatorAdded",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ValidatorArrayCleared",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "remove_idx",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "dont_care_about_ordering",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ValidatorRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "times",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ValidatorsPopped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "from_pubKey",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "to_pubKey",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "from_idx",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "to_idx",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ValidatorsSwapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_withdrawalCredential",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalCredentialSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithheldETHMoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newRatio",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithholdRatioSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEPOSIT_SIZE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RATIO_PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "activeValidators",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorRegistry.Validator",
              "name": "validator",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "pubKey",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "depositDataRoot",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addValidator"
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorRegistry.Validator[]",
              "name": "validatorArray",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "pubKey",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "depositDataRoot",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addValidators"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearValidatorArray"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentWithheldETH",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depositContract",
          "outputs": [
            {
              "internalType": "contract IDepositContract",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositEther"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depositEtherPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxETHToken",
          "outputs": [
            {
              "internalType": "contract frxETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValidator",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "withdrawalCredentials",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "depositDataRoot",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "depositDataRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getValidatorStruct",
          "outputs": [
            {
              "internalType": "struct OperatorRegistry.Validator",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "pubKey",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "depositDataRoot",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "moveWithheldETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "nominateNewOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nominatedOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numValidators",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "times",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "popValidators"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recoverERC20"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recoverEther"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "remove_idx",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "dont_care_about_ordering",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeValidator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_timelock_address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTimelock"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_new_withdrawal_pubkey",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWithdrawalCredential"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newRatio",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWithholdRatio"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sfrxETHToken",
          "outputs": [
            {
              "internalType": "contract IsfrxETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "submit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "submitAndDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "submitAndGive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submitPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from_idx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to_idx",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapValidator"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timelock_address",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "togglePauseDepositEther"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "togglePauseSubmits"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withholdRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addValidator((bytes,bytes,bytes32))": {
            "details": "You should verify offchain that the validator is indeed valid before adding it Reason we don't do that here is for gas "
          },
          "addValidators((bytes,bytes,bytes32)[])": {
            "details": "You should verify offchain that the validators are indeed valid before adding them Reason we don't do that here is for gas "
          },
          "clearValidatorArray()": {
            "details": "Need to do this before setWithdrawalCredential()"
          },
          "depositEther()": {
            "details": "Usually a bot will call this periodically"
          },
          "setWithdrawalCredential(bytes)": {
            "details": "May need to call clearValidatorArray() first"
          },
          "setWithholdRatio(uint256)": {
            "params": {
              "newRatio": "of ETH that is sent to deposit contract vs withheld, 1e6 precision"
            }
          },
          "submitAndDeposit(address)": {
            "details": "Could try using EIP-712 / EIP-2612 here in the future if you replace this contract, but you might run into msg.sender vs tx.origin issues with the ERC4626 "
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "clearValidatorArray()": {
            "notice": "Empties the validator array"
          },
          "depositEther()": {
            "notice": "Deposit batches of ETH to the ETH 2.0 deposit contract"
          },
          "getValidator(uint256)": {
            "notice": "Return the information of the i'th validator in the registry"
          },
          "getValidatorStruct(bytes,bytes,bytes32)": {
            "notice": "Returns a Validator struct of the given inputs to make formatting addValidator inputs easier"
          },
          "moveWithheldETH(address,uint256)": {
            "notice": "Give the withheld ETH to the \"to\" address"
          },
          "numValidators()": {
            "notice": "Returns the number of validators"
          },
          "popValidators(uint256)": {
            "notice": "Remove validators from the end of the validators array, in case they were added in error"
          },
          "recoverERC20(address,uint256)": {
            "notice": "For emergencies if someone accidentally sent some ERC20 tokens here"
          },
          "recoverEther(uint256)": {
            "notice": "For emergencies if something gets stuck"
          },
          "removeValidator(uint256,bool)": {
            "notice": "Remove a validator from the array. If dont_care_about_ordering is true,   a swap and pop will occur instead of a more gassy loop "
          },
          "setTimelock(address)": {
            "notice": "Set the timelock contract"
          },
          "setWithdrawalCredential(bytes)": {
            "notice": "Requires empty validator stack as changing withdrawal creds invalidates signature"
          },
          "setWithholdRatio(uint256)": {
            "notice": "An input of 1e6 results in 100% of Eth deposited, 0% withheld"
          },
          "submit()": {
            "notice": "Mint frxETH to the sender depending on the ETH value sent"
          },
          "submitAndGive(address)": {
            "notice": "Mint frxETH to the recipient using sender's funds"
          },
          "swapValidator(uint256,uint256)": {
            "notice": "Swap the location of one validator with another"
          },
          "togglePauseDepositEther()": {
            "notice": "Toggle allowing depositing ETH to validators"
          },
          "togglePauseSubmits()": {
            "notice": "Toggle allowing submites"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ERC4626/=lib/ERC4626/src/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/frxETHMinter.sol": "frxETHMinter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x6e3ba605a09b2cf6ab80fa9e4159b1e9f0f49bd8927032c3251a099e96ed54bc",
        "urls": [
          "bzz-raw://05bb933ff14dd2a81c37c1d7b4992df8034107ca5edd60cf8e5a20dc566d3b72",
          "dweb:/ipfs/QmbDdZDWqkRdLtG6AFutDNzF9d2vyVFDJmVSbnVKQ6nPHH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
        "keccak256": "0x66795a58157bf230b93d604fe7e6b51acb409eb9e5b98333809162f17ab3208d",
        "urls": [
          "bzz-raw://130e7ebcc7af0c2b9cac5709d9509ffd210d8e4f60f9dcea6af1a36d9b84db51",
          "dweb:/ipfs/QmZBhpEVBvGQpFEQE4xSwFGCJrYwXUuVMbspzXMWGizmEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d",
        "urls": [
          "bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3",
          "dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x852987c093178595e02298b72a5f3c09aee541604b9e24a3a550bc63d92f3a22",
        "urls": [
          "bzz-raw://f9b51f6bbe233c5ad5aa9dd2d09e1dc2f7e5b7a8007ad6d0a1c4cdd8e913d157",
          "dweb:/ipfs/QmNZz3XegYagUgKBPBNeMuPZQNwmYd6j7GbwTFU1T6ZsD2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "src/DepositContract.sol": {
        "keccak256": "0xd60bd73a63501072690cc86150951060ad9939c85213607efe3f8f306b406bd3",
        "urls": [
          "bzz-raw://1336744117a21919c0ad8ba4e8d35f29a35834a7df337b597b9856e3548fca9e",
          "dweb:/ipfs/QmUpFnKCDYcfRZKVR1DkCcbv3XxYTHicuvauNWyQ7uXiUa"
        ],
        "license": "CC0-1.0"
      },
      "src/ERC20/ERC20PermitPermissionedMint.sol": {
        "keccak256": "0x0dceb590245da998cf5cb2892676e72a8f6e98bdcf8ad5c96e23de14eada2a1a",
        "urls": [
          "bzz-raw://e5e02fee2aaa4ba0627debd16589bd39098774234910ba32e82f6833127de9c7",
          "dweb:/ipfs/QmfNu192ZP29WUwNnvSTneoMeAX27Y4rD6kfLoNRwXxq85"
        ],
        "license": "Unlicense"
      },
      "src/IsfrxETH.sol": {
        "keccak256": "0xc8d6e2c4f35293705c55c72a6c5b24001d1eecb245af02553877576b7b9dd01b",
        "urls": [
          "bzz-raw://667c2c8151c8f9a31595ac98bfa25c560ec7de023c022f048736be4bff4edeed",
          "dweb:/ipfs/QmU6idtA1W3vDBbB7GasHAx8LzhNMp6R8aoiW9g2jAfhVJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/OperatorRegistry.sol": {
        "keccak256": "0x6f8b1943669ded0209616d6a2c4b48f348f8450f3006448081d76ceecaaeb8bc",
        "urls": [
          "bzz-raw://b5dc60446ecfe2b745a3aacbb7342e1d2e3c65f93350992c487f3ddfb3b65410",
          "dweb:/ipfs/QmeQEyTGGVdmexBdC6vYhPu9Pcofm6M4od7uq41j4V39Jn"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Utils/Owned.sol": {
        "keccak256": "0xf250cc7b5663d822af1292ffac8f246cd2f7b785b510c1a2b702d38ae9ee6688",
        "urls": [
          "bzz-raw://e5afe4d43c5cb6aa7c6a91313ed9e25a38560c17e60da476ff872c65fc821fbe",
          "dweb:/ipfs/QmYGA2R5uj9td5wfoN4R2uuLY87rSDBHhETBHKRyaBiQL8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/frxETH.sol": {
        "keccak256": "0x898bd5d6c2bcc319d98f600763e0f33b1ee3bfb4bd59bd9979077bf9653ec376",
        "urls": [
          "bzz-raw://79a5ff06151f1c86aa86ac86e4fe1facd62b5cd98c62cb63aa3e3b26ec23bf78",
          "dweb:/ipfs/QmQrVcZ491gBWHC6d4HKpmXPRNuStq2i2bjEZ84jBKrQXm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/frxETHMinter.sol": {
        "keccak256": "0x79e1dbce1c0430fe1688ce1253fce9abf66563a56db8134b3cfec54e1af65152",
        "urls": [
          "bzz-raw://234905011ea479048bc576a25e11fd4b1576cc418cae9b2d69875fcf3a10c1fc",
          "dweb:/ipfs/QmXBCuH8MAZUniw3j7EzSqEAxDs2QcydQdck3JJi2jmA7x"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "clearValidatorArray()": {
        "notice": "Empties the validator array"
      },
      "depositEther()": {
        "notice": "Deposit batches of ETH to the ETH 2.0 deposit contract"
      },
      "getValidator(uint256)": {
        "notice": "Return the information of the i'th validator in the registry"
      },
      "getValidatorStruct(bytes,bytes,bytes32)": {
        "notice": "Returns a Validator struct of the given inputs to make formatting addValidator inputs easier"
      },
      "moveWithheldETH(address,uint256)": {
        "notice": "Give the withheld ETH to the \"to\" address"
      },
      "numValidators()": {
        "notice": "Returns the number of validators"
      },
      "popValidators(uint256)": {
        "notice": "Remove validators from the end of the validators array, in case they were added in error"
      },
      "recoverERC20(address,uint256)": {
        "notice": "For emergencies if someone accidentally sent some ERC20 tokens here"
      },
      "recoverEther(uint256)": {
        "notice": "For emergencies if something gets stuck"
      },
      "removeValidator(uint256,bool)": {
        "notice": "Remove a validator from the array. If dont_care_about_ordering is true,   a swap and pop will occur instead of a more gassy loop "
      },
      "setTimelock(address)": {
        "notice": "Set the timelock contract"
      },
      "setWithdrawalCredential(bytes)": {
        "notice": "Requires empty validator stack as changing withdrawal creds invalidates signature"
      },
      "setWithholdRatio(uint256)": {
        "notice": "An input of 1e6 results in 100% of Eth deposited, 0% withheld"
      },
      "submit()": {
        "notice": "Mint frxETH to the sender depending on the ETH value sent"
      },
      "submitAndGive(address)": {
        "notice": "Mint frxETH to the recipient using sender's funds"
      },
      "swapValidator(uint256,uint256)": {
        "notice": "Swap the location of one validator with another"
      },
      "togglePauseDepositEther()": {
        "notice": "Toggle allowing depositing ETH to validators"
      },
      "togglePauseSubmits()": {
        "notice": "Toggle allowing submites"
      }
    }
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "details": "Has permission to mint frxETH.  Once +32 ETH has accumulated, adds it to a validator, which then deposits it for ETH 2.0 staking (depositEther()) Withhold ratio refers to what percentage of ETH this contract keeps whenever a user makes a deposit. 0% is kept initially ",
    "methods": {
      "addValidator((bytes,bytes,bytes32))": {
        "details": "You should verify offchain that the validator is indeed valid before adding it Reason we don't do that here is for gas "
      },
      "addValidators((bytes,bytes,bytes32)[])": {
        "details": "You should verify offchain that the validators are indeed valid before adding them Reason we don't do that here is for gas "
      },
      "clearValidatorArray()": {
        "details": "Need to do this before setWithdrawalCredential()"
      },
      "depositEther()": {
        "details": "Usually a bot will call this periodically"
      },
      "setWithdrawalCredential(bytes)": {
        "details": "May need to call clearValidatorArray() first"
      },
      "setWithholdRatio(uint256)": {
        "params": {
          "newRatio": "of ETH that is sent to deposit contract vs withheld, 1e6 precision"
        }
      },
      "submitAndDeposit(address)": {
        "details": "Could try using EIP-712 / EIP-2612 here in the future if you replace this contract, but you might run into msg.sender vs tx.origin issues with the ERC4626 "
      }
    }
  },
  "ast": {
    "absolutePath": "src/frxETHMinter.sol",
    "id": 30029,
    "exportedSymbols": {
      "IDepositContract": [
        27739
      ],
      "IERC20": [
        22392
      ],
      "IsfrxETH": [
        28811
      ],
      "OperatorRegistry": [
        29314
      ],
      "Owned": [
        29415
      ],
      "ReentrancyGuard": [
        21727
      ],
      "frxETH": [
        29511
      ],
      "frxETHMinter": [
        30028
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:9208:36",
    "nodes": [
      {
        "id": 29513,
        "nodeType": "PragmaDirective",
        "src": "42:23:36",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 29515,
        "nodeType": "ImportDirective",
        "src": "1108:38:36",
        "absolutePath": "src/frxETH.sol",
        "file": "./frxETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30029,
        "sourceUnit": 29512,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29514,
              "name": "frxETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29511,
              "src": "1117:6:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 29517,
        "nodeType": "ImportDirective",
        "src": "1147:42:36",
        "absolutePath": "src/IsfrxETH.sol",
        "file": "./IsfrxETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30029,
        "sourceUnit": 28812,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29516,
              "name": "IsfrxETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28811,
              "src": "1156:8:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 29518,
        "nodeType": "ImportDirective",
        "src": "1190:71:36",
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30029,
        "sourceUnit": 21728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29519,
        "nodeType": "ImportDirective",
        "src": "1262:65:36",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30029,
        "sourceUnit": 22393,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29521,
        "nodeType": "ImportDirective",
        "src": "1328:57:36",
        "absolutePath": "src/DepositContract.sol",
        "file": "./DepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30029,
        "sourceUnit": 28242,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29520,
              "name": "IDepositContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27739,
              "src": "1337:16:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 29522,
        "nodeType": "ImportDirective",
        "src": "1386:32:36",
        "absolutePath": "src/OperatorRegistry.sol",
        "file": "./OperatorRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30029,
        "sourceUnit": 29315,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30028,
        "nodeType": "ContractDefinition",
        "src": "1903:7346:36",
        "nodes": [
          {
            "id": 29530,
            "nodeType": "VariableDeclaration",
            "src": "1972:47:36",
            "constant": true,
            "functionSelector": "36bf3325",
            "mutability": "constant",
            "name": "DEPOSIT_SIZE",
            "nameLocation": "1996:12:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29528,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1972:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3332",
              "id": 29529,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2011:8:36",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_32000000000000000000_by_1",
                "typeString": "int_const 32000000000000000000"
              },
              "value": "32"
            },
            "visibility": "public"
          },
          {
            "id": 29533,
            "nodeType": "VariableDeclaration",
            "src": "2057:45:36",
            "constant": true,
            "functionSelector": "d32867d0",
            "mutability": "constant",
            "name": "RATIO_PRECISION",
            "nameLocation": "2081:15:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29531,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2057:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316536",
              "id": 29532,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2099:3:36",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1e6"
            },
            "visibility": "public"
          },
          {
            "id": 29535,
            "nodeType": "VariableDeclaration",
            "src": "2123:28:36",
            "constant": false,
            "functionSelector": "57c59b04",
            "mutability": "mutable",
            "name": "withholdRatio",
            "nameLocation": "2138:13:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29534,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2123:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29537,
            "nodeType": "VariableDeclaration",
            "src": "2223:33:36",
            "constant": false,
            "functionSelector": "8e69d7ad",
            "mutability": "mutable",
            "name": "currentWithheldETH",
            "nameLocation": "2238:18:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29536,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2223:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29541,
            "nodeType": "VariableDeclaration",
            "src": "2294:46:36",
            "constant": false,
            "functionSelector": "cdcedf40",
            "mutability": "mutable",
            "name": "activeValidators",
            "nameLocation": "2324:16:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
              "typeString": "mapping(bytes => bool)"
            },
            "typeName": {
              "id": 29540,
              "keyType": {
                "id": 29538,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "2302:5:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              },
              "nodeType": "Mapping",
              "src": "2294:22:36",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                "typeString": "mapping(bytes => bool)"
              },
              "valueType": {
                "id": 29539,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2311:4:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 29544,
            "nodeType": "VariableDeclaration",
            "src": "2421:49:36",
            "constant": false,
            "functionSelector": "e94ad65b",
            "mutability": "immutable",
            "name": "depositContract",
            "nameLocation": "2455:15:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$27739",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 29543,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29542,
                "name": "IDepositContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27739,
                "src": "2421:16:36"
              },
              "referencedDeclaration": 27739,
              "src": "2421:16:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$27739",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29547,
            "nodeType": "VariableDeclaration",
            "src": "2504:35:36",
            "constant": false,
            "functionSelector": "ba947f27",
            "mutability": "immutable",
            "name": "frxETHToken",
            "nameLocation": "2528:11:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_frxETH_$29511",
              "typeString": "contract frxETH"
            },
            "typeName": {
              "id": 29546,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29545,
                "name": "frxETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29511,
                "src": "2504:6:36"
              },
              "referencedDeclaration": 29511,
              "src": "2504:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_frxETH_$29511",
                "typeString": "contract frxETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29550,
            "nodeType": "VariableDeclaration",
            "src": "2545:38:36",
            "constant": false,
            "functionSelector": "1c568db6",
            "mutability": "immutable",
            "name": "sfrxETHToken",
            "nameLocation": "2571:12:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IsfrxETH_$28811",
              "typeString": "contract IsfrxETH"
            },
            "typeName": {
              "id": 29549,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29548,
                "name": "IsfrxETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28811,
                "src": "2545:8:36"
              },
              "referencedDeclaration": 28811,
              "src": "2545:8:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IsfrxETH_$28811",
                "typeString": "contract IsfrxETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29552,
            "nodeType": "VariableDeclaration",
            "src": "2590:24:36",
            "constant": false,
            "functionSelector": "b6d24f18",
            "mutability": "mutable",
            "name": "submitPaused",
            "nameLocation": "2602:12:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 29551,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2590:4:36",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29554,
            "nodeType": "VariableDeclaration",
            "src": "2620:30:36",
            "constant": false,
            "functionSelector": "206583ac",
            "mutability": "mutable",
            "name": "depositEtherPaused",
            "nameLocation": "2632:18:36",
            "scope": 30028,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 29553,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2620:4:36",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29601,
            "nodeType": "FunctionDefinition",
            "src": "2657:555:36",
            "body": {
              "id": 29600,
              "nodeType": "Block",
              "src": "2952:260:36",
              "statements": [
                {
                  "expression": {
                    "id": 29578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29574,
                      "name": "depositContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29544,
                      "src": "2962:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDepositContract_$27739",
                        "typeString": "contract IDepositContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29576,
                          "name": "depositContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29556,
                          "src": "2997:22:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29575,
                        "name": "IDepositContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27739,
                        "src": "2980:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDepositContract_$27739_$",
                          "typeString": "type(contract IDepositContract)"
                        }
                      },
                      "id": 29577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2980:40:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDepositContract_$27739",
                        "typeString": "contract IDepositContract"
                      }
                    },
                    "src": "2962:58:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDepositContract_$27739",
                      "typeString": "contract IDepositContract"
                    }
                  },
                  "id": 29579,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:58:36"
                },
                {
                  "expression": {
                    "id": 29584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29580,
                      "name": "frxETHToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29547,
                      "src": "3030:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_frxETH_$29511",
                        "typeString": "contract frxETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29582,
                          "name": "frxETHAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29558,
                          "src": "3051:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29581,
                        "name": "frxETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29511,
                        "src": "3044:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_frxETH_$29511_$",
                          "typeString": "type(contract frxETH)"
                        }
                      },
                      "id": 29583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3044:21:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_frxETH_$29511",
                        "typeString": "contract frxETH"
                      }
                    },
                    "src": "3030:35:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_frxETH_$29511",
                      "typeString": "contract frxETH"
                    }
                  },
                  "id": 29585,
                  "nodeType": "ExpressionStatement",
                  "src": "3030:35:36"
                },
                {
                  "expression": {
                    "id": 29590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29586,
                      "name": "sfrxETHToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29550,
                      "src": "3075:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IsfrxETH_$28811",
                        "typeString": "contract IsfrxETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29588,
                          "name": "sfrxETHAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29560,
                          "src": "3099:14:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29587,
                        "name": "IsfrxETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28811,
                        "src": "3090:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IsfrxETH_$28811_$",
                          "typeString": "type(contract IsfrxETH)"
                        }
                      },
                      "id": 29589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3090:24:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IsfrxETH_$28811",
                        "typeString": "contract IsfrxETH"
                      }
                    },
                    "src": "3075:39:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IsfrxETH_$28811",
                      "typeString": "contract IsfrxETH"
                    }
                  },
                  "id": 29591,
                  "nodeType": "ExpressionStatement",
                  "src": "3075:39:36"
                },
                {
                  "expression": {
                    "id": 29594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29592,
                      "name": "withholdRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29535,
                      "src": "3124:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 29593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3140:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3124:17:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29595,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:17:36"
                },
                {
                  "expression": {
                    "id": 29598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29596,
                      "name": "currentWithheldETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29537,
                      "src": "3183:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 29597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3204:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3183:22:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29599,
                  "nodeType": "ExpressionStatement",
                  "src": "3183:22:36"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 29569,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29562,
                    "src": "2902:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 29570,
                    "name": "_timelock_address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29564,
                    "src": "2910:17:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 29571,
                    "name": "_withdrawalCredential",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29566,
                    "src": "2929:21:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 29572,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 29568,
                  "name": "OperatorRegistry",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29314,
                  "src": "2885:16:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "2885:66:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29556,
                  "mutability": "mutable",
                  "name": "depositContractAddress",
                  "nameLocation": "2686:22:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29601,
                  "src": "2678:30:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29558,
                  "mutability": "mutable",
                  "name": "frxETHAddress",
                  "nameLocation": "2727:13:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29601,
                  "src": "2719:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29560,
                  "mutability": "mutable",
                  "name": "sfrxETHAddress",
                  "nameLocation": "2759:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29601,
                  "src": "2751:22:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2751:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29562,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2792:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29601,
                  "src": "2784:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29564,
                  "mutability": "mutable",
                  "name": "_timelock_address",
                  "nameLocation": "2817:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29601,
                  "src": "2809:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2809:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29566,
                  "mutability": "mutable",
                  "name": "_withdrawalCredential",
                  "nameLocation": "2857:21:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29601,
                  "src": "2844:34:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29565,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2844:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2668:216:36"
            },
            "returnParameters": {
              "id": 29573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2952:0:36"
            },
            "scope": 30028,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29646,
            "nodeType": "FunctionDefinition",
            "src": "3478:569:36",
            "body": {
              "id": 29645,
              "nodeType": "Block",
              "src": "3565:482:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29612,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3657:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_frxETHMinter_$30028",
                              "typeString": "contract frxETHMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_frxETHMinter_$30028",
                              "typeString": "contract frxETHMinter"
                            }
                          ],
                          "id": 29611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3649:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29610,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3649:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3649:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29609,
                      "name": "_submit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29709,
                      "src": "3641:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3641:22:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29615,
                  "nodeType": "ExpressionStatement",
                  "src": "3641:22:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29621,
                            "name": "sfrxETHToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29550,
                            "src": "3751:12:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IsfrxETH_$28811",
                              "typeString": "contract IsfrxETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IsfrxETH_$28811",
                              "typeString": "contract IsfrxETH"
                            }
                          ],
                          "id": 29620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3743:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29619,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3743:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3743:21:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 29623,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3766:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3766:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29616,
                        "name": "frxETHToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29547,
                        "src": "3723:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_frxETH_$29511",
                          "typeString": "contract frxETH"
                        }
                      },
                      "id": 29618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21894,
                      "src": "3723:19:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3723:53:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29626,
                  "nodeType": "ExpressionStatement",
                  "src": "3723:53:36"
                },
                {
                  "assignments": [
                    29628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29628,
                      "mutability": "mutable",
                      "name": "sfrxeth_recieved",
                      "nameLocation": "3879:16:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 29645,
                      "src": "3871:24:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29627,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3871:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29635,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29631,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3919:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3919:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29633,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29604,
                        "src": "3930:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29629,
                        "name": "sfrxETHToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29550,
                        "src": "3898:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IsfrxETH_$28811",
                          "typeString": "contract IsfrxETH"
                        }
                      },
                      "id": 29630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28598,
                      "src": "3898:20:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 29634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3898:42:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3871:69:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29637,
                          "name": "sfrxeth_recieved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29628,
                          "src": "3958:16:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 29638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3977:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3958:20:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073667278455448207761732072657475726e6564",
                        "id": 29640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3980:25:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45aa5b45770098f7e9df96e212d2eff3562e39e6e59e1fedfdd83b0cdae2c4bc",
                          "typeString": "literal_string \"No sfrxETH was returned\""
                        },
                        "value": "No sfrxETH was returned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45aa5b45770098f7e9df96e212d2eff3562e39e6e59e1fedfdd83b0cdae2c4bc",
                          "typeString": "literal_string \"No sfrxETH was returned\""
                        }
                      ],
                      "id": 29636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3950:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3950:56:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29642,
                  "nodeType": "ExpressionStatement",
                  "src": "3950:56:36"
                },
                {
                  "expression": {
                    "id": 29643,
                    "name": "sfrxeth_recieved",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29628,
                    "src": "4024:16:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 29608,
                  "id": 29644,
                  "nodeType": "Return",
                  "src": "4017:23:36"
                }
              ]
            },
            "documentation": {
              "id": 29602,
              "nodeType": "StructuredDocumentation",
              "src": "3299:174:36",
              "text": "@dev Could try using EIP-712 / EIP-2612 here in the future if you replace this contract,\nbut you might run into msg.sender vs tx.origin issues with the ERC4626 "
            },
            "functionSelector": "4dcd4547",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitAndDeposit",
            "nameLocation": "3487:16:36",
            "parameters": {
              "id": 29605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29604,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3512:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29646,
                  "src": "3504:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3504:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3503:19:36"
            },
            "returnParameters": {
              "id": 29608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29607,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "3557:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29646,
                  "src": "3549:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3549:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3548:16:36"
            },
            "scope": 30028,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29709,
            "nodeType": "FunctionDefinition",
            "src": "4137:633:36",
            "body": {
              "id": 29708,
              "nodeType": "Block",
              "src": "4195:575:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4255:13:36",
                        "subExpression": {
                          "id": 29655,
                          "name": "submitPaused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29552,
                          "src": "4256:12:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5375626d697420697320706175736564",
                        "id": 29657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4270:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7aacdaf8a3470b1e308a7a2ebe97c75bbe79011b863786afe9773f98e43f34",
                          "typeString": "literal_string \"Submit is paused\""
                        },
                        "value": "Submit is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7aacdaf8a3470b1e308a7a2ebe97c75bbe79011b863786afe9773f98e43f34",
                          "typeString": "literal_string \"Submit is paused\""
                        }
                      ],
                      "id": 29654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4247:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4247:42:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29659,
                  "nodeType": "ExpressionStatement",
                  "src": "4247:42:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 29661,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4307:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4307:9:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 29663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4320:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4307:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207375626d69742030",
                        "id": 29665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4323:17:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aeedac7082cd118fb6b2c9e6cde760c57a180c131d15f33498cffa54038b04c7",
                          "typeString": "literal_string \"Cannot submit 0\""
                        },
                        "value": "Cannot submit 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aeedac7082cd118fb6b2c9e6cde760c57a180c131d15f33498cffa54038b04c7",
                          "typeString": "literal_string \"Cannot submit 0\""
                        }
                      ],
                      "id": 29660,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4299:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4299:42:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29667,
                  "nodeType": "ExpressionStatement",
                  "src": "4299:42:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29671,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29649,
                        "src": "4410:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 29672,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4421:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4421:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29668,
                        "name": "frxETHToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29547,
                        "src": "4386:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_frxETH_$29511",
                          "typeString": "contract frxETH"
                        }
                      },
                      "id": 29670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "minter_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28369,
                      "src": "4386:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 29674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4386:45:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29675,
                  "nodeType": "ExpressionStatement",
                  "src": "4386:45:36"
                },
                {
                  "assignments": [
                    29677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29677,
                      "mutability": "mutable",
                      "name": "withheld_amt",
                      "nameLocation": "4505:12:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 29708,
                      "src": "4497:20:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29676,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4497:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29679,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 29678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4520:1:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4497:24:36"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29680,
                      "name": "withholdRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29535,
                      "src": "4535:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 29681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4552:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4535:18:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29698,
                  "nodeType": "IfStatement",
                  "src": "4531:157:36",
                  "trueBody": {
                    "id": 29697,
                    "nodeType": "Block",
                    "src": "4555:133:36",
                    "statements": [
                      {
                        "expression": {
                          "id": 29691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29683,
                            "name": "withheld_amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29677,
                            "src": "4569:12:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 29690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 29687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 29684,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4585:3:36",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 29685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "4585:9:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 29686,
                                    "name": "withholdRatio",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29535,
                                    "src": "4597:13:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4585:25:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 29688,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4584:27:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 29689,
                              "name": "RATIO_PRECISION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29533,
                              "src": "4614:15:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4584:45:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4569:60:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 29692,
                        "nodeType": "ExpressionStatement",
                        "src": "4569:60:36"
                      },
                      {
                        "expression": {
                          "id": 29695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29693,
                            "name": "currentWithheldETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29537,
                            "src": "4643:18:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 29694,
                            "name": "withheld_amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29677,
                            "src": "4665:12:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4643:34:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 29696,
                        "nodeType": "ExpressionStatement",
                        "src": "4643:34:36"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29700,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4716:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4716:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29702,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29649,
                        "src": "4728:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 29703,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4739:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4739:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 29705,
                        "name": "withheld_amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29677,
                        "src": "4750:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29699,
                      "name": "ETHSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30003,
                      "src": "4703:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 29706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4703:60:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29707,
                  "nodeType": "EmitStatement",
                  "src": "4698:65:36"
                }
              ]
            },
            "documentation": {
              "id": 29647,
              "nodeType": "StructuredDocumentation",
              "src": "4053:79:36",
              "text": "@notice Mint frxETH to the recipient using sender's funds. Internal portion"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29652,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29651,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21703,
                  "src": "4182:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "4182:12:36"
              }
            ],
            "name": "_submit",
            "nameLocation": "4146:7:36",
            "parameters": {
              "id": 29650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29649,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4162:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29709,
                  "src": "4154:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4154:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4153:19:36"
            },
            "returnParameters": {
              "id": 29653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4195:0:36"
            },
            "scope": 30028,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 29719,
            "nodeType": "FunctionDefinition",
            "src": "4850:71:36",
            "body": {
              "id": 29718,
              "nodeType": "Block",
              "src": "4885:36:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29714,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4903:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4903:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29713,
                      "name": "_submit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29709,
                      "src": "4895:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4895:19:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29717,
                  "nodeType": "ExpressionStatement",
                  "src": "4895:19:36"
                }
              ]
            },
            "documentation": {
              "id": 29710,
              "nodeType": "StructuredDocumentation",
              "src": "4776:69:36",
              "text": "@notice Mint frxETH to the sender depending on the ETH value sent"
            },
            "functionSelector": "5bcb2fc6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submit",
            "nameLocation": "4859:6:36",
            "parameters": {
              "id": 29711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4865:2:36"
            },
            "returnParameters": {
              "id": 29712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4885:0:36"
            },
            "scope": 30028,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29730,
            "nodeType": "FunctionDefinition",
            "src": "4993:94:36",
            "body": {
              "id": 29729,
              "nodeType": "Block",
              "src": "5052:35:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29726,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29722,
                        "src": "5070:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29725,
                      "name": "_submit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29709,
                      "src": "5062:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:18:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29728,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:18:36"
                }
              ]
            },
            "documentation": {
              "id": 29720,
              "nodeType": "StructuredDocumentation",
              "src": "4927:61:36",
              "text": "@notice Mint frxETH to the recipient using sender's funds"
            },
            "functionSelector": "bfda0c8c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitAndGive",
            "nameLocation": "5002:13:36",
            "parameters": {
              "id": 29723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29722,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5024:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29730,
                  "src": "5016:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5016:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5015:19:36"
            },
            "returnParameters": {
              "id": 29724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5052:0:36"
            },
            "scope": 30028,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29740,
            "nodeType": "FunctionDefinition",
            "src": "5150:63:36",
            "body": {
              "id": 29739,
              "nodeType": "Block",
              "src": "5177:36:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29735,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5195:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5195:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29734,
                      "name": "_submit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29709,
                      "src": "5187:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5187:19:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29738,
                  "nodeType": "ExpressionStatement",
                  "src": "5187:19:36"
                }
              ]
            },
            "documentation": {
              "id": 29731,
              "nodeType": "StructuredDocumentation",
              "src": "5093:52:36",
              "text": "@notice Fallback to minting frxETH to the sender"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5157:2:36"
            },
            "returnParameters": {
              "id": 29733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5177:0:36"
            },
            "scope": 30028,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29826,
            "nodeType": "FunctionDefinition",
            "src": "5345:1488:36",
            "body": {
              "id": 29825,
              "nodeType": "Block",
              "src": "5391:1442:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5440:19:36",
                        "subExpression": {
                          "id": 29747,
                          "name": "depositEtherPaused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29554,
                          "src": "5441:18:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f736974696e672045544820697320706175736564",
                        "id": 29749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5461:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc43223853bd43ece496651160790ac3b62888f8258aa3bcd7d68698761ce0a5",
                          "typeString": "literal_string \"Depositing ETH is paused\""
                        },
                        "value": "Depositing ETH is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc43223853bd43ece496651160790ac3b62888f8258aa3bcd7d68698761ce0a5",
                          "typeString": "literal_string \"Depositing ETH is paused\""
                        }
                      ],
                      "id": 29746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5432:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5432:56:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29751,
                  "nodeType": "ExpressionStatement",
                  "src": "5432:56:36"
                },
                {
                  "assignments": [
                    29753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29753,
                      "mutability": "mutable",
                      "name": "numDeposits",
                      "nameLocation": "5573:11:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 29825,
                      "src": "5565:19:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29752,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5565:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29764,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 29760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 29756,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5596:4:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_frxETHMinter_$30028",
                                    "typeString": "contract frxETHMinter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_frxETHMinter_$30028",
                                    "typeString": "contract frxETHMinter"
                                  }
                                ],
                                "id": 29755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5588:7:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29754,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5588:7:36",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5588:13:36",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 29758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "5588:21:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 29759,
                            "name": "currentWithheldETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29537,
                            "src": "5612:18:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5588:42:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 29761,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5587:44:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 29762,
                      "name": "DEPOSIT_SIZE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29530,
                      "src": "5634:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5587:59:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5565:81:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29766,
                          "name": "numDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29753,
                          "src": "5664:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 29767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5678:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5664:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820696e20636f6e7472616374",
                        "id": 29769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5681:28:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc0480219fdeeafa8f3baf0545d47d209a24d6a9c8ea6692b7b57c87c360ec84",
                          "typeString": "literal_string \"Not enough ETH in contract\""
                        },
                        "value": "Not enough ETH in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc0480219fdeeafa8f3baf0545d47d209a24d6a9c8ea6692b7b57c87c360ec84",
                          "typeString": "literal_string \"Not enough ETH in contract\""
                        }
                      ],
                      "id": 29765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5656:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5656:54:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29771,
                  "nodeType": "ExpressionStatement",
                  "src": "5656:54:36"
                },
                {
                  "body": {
                    "id": 29823,
                    "nodeType": "Block",
                    "src": "5820:1007:36",
                    "statements": [
                      {
                        "assignments": [
                          29783,
                          29785,
                          29787,
                          29789
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29783,
                            "mutability": "mutable",
                            "name": "pubKey",
                            "nameLocation": "5906:6:36",
                            "nodeType": "VariableDeclaration",
                            "scope": 29823,
                            "src": "5893:19:36",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 29782,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5893:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 29785,
                            "mutability": "mutable",
                            "name": "withdrawalCredential",
                            "nameLocation": "5943:20:36",
                            "nodeType": "VariableDeclaration",
                            "scope": 29823,
                            "src": "5930:33:36",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 29784,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5930:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 29787,
                            "mutability": "mutable",
                            "name": "signature",
                            "nameLocation": "5994:9:36",
                            "nodeType": "VariableDeclaration",
                            "scope": 29823,
                            "src": "5981:22:36",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 29786,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5981:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 29789,
                            "mutability": "mutable",
                            "name": "depositDataRoot",
                            "nameLocation": "6029:15:36",
                            "nodeType": "VariableDeclaration",
                            "scope": 29823,
                            "src": "6021:23:36",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 29788,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6021:7:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29792,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 29790,
                            "name": "getNextValidator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29137,
                            "src": "6061:16:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$",
                              "typeString": "function () returns (bytes memory,bytes memory,bytes memory,bytes32)"
                            }
                          },
                          "id": 29791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6061:18:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$",
                            "typeString": "tuple(bytes memory,bytes memory,bytes memory,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5875:204:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6314:25:36",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 29794,
                                  "name": "activeValidators",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29541,
                                  "src": "6315:16:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                                    "typeString": "mapping(bytes memory => bool)"
                                  }
                                },
                                "id": 29796,
                                "indexExpression": {
                                  "id": 29795,
                                  "name": "pubKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29783,
                                  "src": "6332:6:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6315:24:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c696461746f7220616c72656164792068617320333220455448",
                              "id": 29798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6341:30:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_11cbe411130a2ab1b9a4cb629162161a9bd95c2c25fb41ef1add875812303b17",
                                "typeString": "literal_string \"Validator already has 32 ETH\""
                              },
                              "value": "Validator already has 32 ETH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_11cbe411130a2ab1b9a4cb629162161a9bd95c2c25fb41ef1add875812303b17",
                                "typeString": "literal_string \"Validator already has 32 ETH\""
                              }
                            ],
                            "id": 29793,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6306:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 29799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6306:66:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29800,
                        "nodeType": "ExpressionStatement",
                        "src": "6306:66:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29806,
                              "name": "pubKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29783,
                              "src": "6514:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 29807,
                              "name": "withdrawalCredential",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29785,
                              "src": "6538:20:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 29808,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29787,
                              "src": "6576:9:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 29809,
                              "name": "depositDataRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29789,
                              "src": "6603:15:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 29801,
                                "name": "depositContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29544,
                                "src": "6452:15:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDepositContract_$27739",
                                  "typeString": "contract IDepositContract"
                                }
                              },
                              "id": 29803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27726,
                              "src": "6452:23:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) payable external"
                              }
                            },
                            "id": 29805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 29804,
                                "name": "DEPOSIT_SIZE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29530,
                                "src": "6483:12:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "6452:44:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$value",
                              "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) payable external"
                            }
                          },
                          "id": 29810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6452:180:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29811,
                        "nodeType": "ExpressionStatement",
                        "src": "6452:180:36"
                      },
                      {
                        "expression": {
                          "id": 29816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 29812,
                              "name": "activeValidators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29541,
                              "src": "6724:16:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                                "typeString": "mapping(bytes memory => bool)"
                              }
                            },
                            "id": 29814,
                            "indexExpression": {
                              "id": 29813,
                              "name": "pubKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29783,
                              "src": "6741:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6724:24:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 29815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6751:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6724:31:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29817,
                        "nodeType": "ExpressionStatement",
                        "src": "6724:31:36"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 29819,
                              "name": "pubKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29783,
                              "src": "6787:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 29820,
                              "name": "withdrawalCredential",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29785,
                              "src": "6795:20:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 29818,
                            "name": "DepositSent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30013,
                            "src": "6775:11:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory)"
                            }
                          },
                          "id": 29821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6775:41:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29822,
                        "nodeType": "EmitStatement",
                        "src": "6770:46:36"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29776,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29773,
                      "src": "5798:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 29777,
                      "name": "numDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29753,
                      "src": "5802:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5798:15:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29824,
                  "initializationExpression": {
                    "assignments": [
                      29773
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 29773,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5791:1:36",
                        "nodeType": "VariableDeclaration",
                        "scope": 29824,
                        "src": "5783:9:36",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29772,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5783:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 29775,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 29774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5795:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5783:13:36"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 29780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5815:3:36",
                      "subExpression": {
                        "id": 29779,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29773,
                        "src": "5817:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 29781,
                    "nodeType": "ExpressionStatement",
                    "src": "5815:3:36"
                  },
                  "nodeType": "ForStatement",
                  "src": "5778:1049:36"
                }
              ]
            },
            "documentation": {
              "id": 29741,
              "nodeType": "StructuredDocumentation",
              "src": "5219:121:36",
              "text": "@notice Deposit batches of ETH to the ETH 2.0 deposit contract\n @dev Usually a bot will call this periodically"
            },
            "functionSelector": "98ea5fca",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29744,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29743,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21703,
                  "src": "5378:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "5378:12:36"
              }
            ],
            "name": "depositEther",
            "nameLocation": "5354:12:36",
            "parameters": {
              "id": 29742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5366:2:36"
            },
            "returnParameters": {
              "id": 29745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5391:0:36"
            },
            "scope": 30028,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29850,
            "nodeType": "FunctionDefinition",
            "src": "7008:224:36",
            "body": {
              "id": 29849,
              "nodeType": "Block",
              "src": "7074:158:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29835,
                          "name": "newRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29829,
                          "src": "7093:8:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 29836,
                          "name": "RATIO_PRECISION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29533,
                          "src": "7105:15:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7093:27:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526174696f2063616e6e6f7420737572706173732031303025",
                        "id": 29838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7122:27:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d53c23e6aa0445f4c728d5c058d394a903da2137ed0b2b1f68f9f2123eb03b27",
                          "typeString": "literal_string \"Ratio cannot surpass 100%\""
                        },
                        "value": "Ratio cannot surpass 100%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d53c23e6aa0445f4c728d5c058d394a903da2137ed0b2b1f68f9f2123eb03b27",
                          "typeString": "literal_string \"Ratio cannot surpass 100%\""
                        }
                      ],
                      "id": 29834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7084:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7084:66:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29840,
                  "nodeType": "ExpressionStatement",
                  "src": "7084:66:36"
                },
                {
                  "expression": {
                    "id": 29843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29841,
                      "name": "withholdRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29535,
                      "src": "7160:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29842,
                      "name": "newRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29829,
                      "src": "7176:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7160:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29844,
                  "nodeType": "ExpressionStatement",
                  "src": "7160:24:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29846,
                        "name": "newRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29829,
                        "src": "7216:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29845,
                      "name": "WithholdRatioSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30027,
                      "src": "7199:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 29847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7199:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29848,
                  "nodeType": "EmitStatement",
                  "src": "7194:31:36"
                }
              ]
            },
            "documentation": {
              "id": 29827,
              "nodeType": "StructuredDocumentation",
              "src": "6839:164:36",
              "text": "@param newRatio of ETH that is sent to deposit contract vs withheld, 1e6 precision\n @notice An input of 1e6 results in 100% of Eth deposited, 0% withheld"
            },
            "functionSelector": "aa6fa83c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29832,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29831,
                  "name": "onlyByOwnGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28870,
                  "src": "7061:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "7061:12:36"
              }
            ],
            "name": "setWithholdRatio",
            "nameLocation": "7017:16:36",
            "parameters": {
              "id": 29830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29829,
                  "mutability": "mutable",
                  "name": "newRatio",
                  "nameLocation": "7042:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29850,
                  "src": "7034:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7034:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7033:18:36"
            },
            "returnParameters": {
              "id": 29833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7074:0:36"
            },
            "scope": 30028,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29894,
            "nodeType": "FunctionDefinition",
            "src": "7296:370:36",
            "body": {
              "id": 29893,
              "nodeType": "Block",
              "src": "7379:287:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29861,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29855,
                          "src": "7397:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 29862,
                          "name": "currentWithheldETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29537,
                          "src": "7407:18:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7397:28:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207769746868656c642045544820696e20636f6e7472616374",
                        "id": 29864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7427:37:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78083e370497af5606f8309c7b4ed3edd06034a56958d3ce401632994d7baf7e",
                          "typeString": "literal_string \"Not enough withheld ETH in contract\""
                        },
                        "value": "Not enough withheld ETH in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78083e370497af5606f8309c7b4ed3edd06034a56958d3ce401632994d7baf7e",
                          "typeString": "literal_string \"Not enough withheld ETH in contract\""
                        }
                      ],
                      "id": 29860,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7389:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7389:76:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29866,
                  "nodeType": "ExpressionStatement",
                  "src": "7389:76:36"
                },
                {
                  "expression": {
                    "id": 29869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29867,
                      "name": "currentWithheldETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29537,
                      "src": "7475:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 29868,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29855,
                      "src": "7497:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7475:28:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29870,
                  "nodeType": "ExpressionStatement",
                  "src": "7475:28:36"
                },
                {
                  "assignments": [
                    29872,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29872,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7520:7:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 29893,
                      "src": "7515:12:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29871,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7515:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 29882,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 29880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7566:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 29875,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29853,
                              "src": "7540:2:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 29874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7532:8:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 29873,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7532:8:36",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7532:11:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 29877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7532:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 29879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 29878,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29855,
                          "src": "7557:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7532:33:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 29881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7532:37:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7514:55:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29884,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29872,
                        "src": "7587:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207472616e73666572",
                        "id": 29885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7596:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_103a54e78761a5822ffca37d337d2b215325cd061cbe37b2898a81b2cbcae825",
                          "typeString": "literal_string \"Invalid transfer\""
                        },
                        "value": "Invalid transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_103a54e78761a5822ffca37d337d2b215325cd061cbe37b2898a81b2cbcae825",
                          "typeString": "literal_string \"Invalid transfer\""
                        }
                      ],
                      "id": 29883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7579:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7579:36:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29887,
                  "nodeType": "ExpressionStatement",
                  "src": "7579:36:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29889,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29853,
                        "src": "7648:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 29890,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29855,
                        "src": "7652:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29888,
                      "name": "WithheldETHMoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30023,
                      "src": "7631:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 29891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7631:28:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29892,
                  "nodeType": "EmitStatement",
                  "src": "7626:33:36"
                }
              ]
            },
            "documentation": {
              "id": 29851,
              "nodeType": "StructuredDocumentation",
              "src": "7238:53:36",
              "text": "@notice Give the withheld ETH to the \"to\" address"
            },
            "functionSelector": "3f8380b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29858,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29857,
                  "name": "onlyByOwnGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28870,
                  "src": "7366:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "7366:12:36"
              }
            ],
            "name": "moveWithheldETH",
            "nameLocation": "7305:15:36",
            "parameters": {
              "id": 29856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29853,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7337:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29894,
                  "src": "7321:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 29852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7321:15:36",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29855,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7349:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29894,
                  "src": "7341:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7341:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7320:36:36"
            },
            "returnParameters": {
              "id": 29859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7379:0:36"
            },
            "scope": 30028,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29910,
            "nodeType": "FunctionDefinition",
            "src": "7713:139:36",
            "body": {
              "id": 29909,
              "nodeType": "Block",
              "src": "7765:87:36",
              "statements": [
                {
                  "expression": {
                    "id": 29903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29900,
                      "name": "submitPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29552,
                      "src": "7775:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7790:13:36",
                      "subExpression": {
                        "id": 29901,
                        "name": "submitPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29552,
                        "src": "7791:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7775:28:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29904,
                  "nodeType": "ExpressionStatement",
                  "src": "7775:28:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29906,
                        "name": "submitPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29552,
                        "src": "7832:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29905,
                      "name": "SubmitPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30017,
                      "src": "7819:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 29907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7819:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29908,
                  "nodeType": "EmitStatement",
                  "src": "7814:31:36"
                }
              ]
            },
            "documentation": {
              "id": 29895,
              "nodeType": "StructuredDocumentation",
              "src": "7672:36:36",
              "text": "@notice Toggle allowing submites"
            },
            "functionSelector": "b507fb00",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29898,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29897,
                  "name": "onlyByOwnGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28870,
                  "src": "7752:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "7752:12:36"
              }
            ],
            "name": "togglePauseSubmits",
            "nameLocation": "7722:18:36",
            "parameters": {
              "id": 29896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7740:2:36"
            },
            "returnParameters": {
              "id": 29899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7765:0:36"
            },
            "scope": 30028,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29926,
            "nodeType": "FunctionDefinition",
            "src": "7919:168:36",
            "body": {
              "id": 29925,
              "nodeType": "Block",
              "src": "7976:111:36",
              "statements": [
                {
                  "expression": {
                    "id": 29919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29916,
                      "name": "depositEtherPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29554,
                      "src": "7986:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "8007:19:36",
                      "subExpression": {
                        "id": 29917,
                        "name": "depositEtherPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29554,
                        "src": "8008:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7986:40:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29920,
                  "nodeType": "ExpressionStatement",
                  "src": "7986:40:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29922,
                        "name": "depositEtherPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29554,
                        "src": "8061:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29921,
                      "name": "DepositEtherPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30007,
                      "src": "8042:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 29923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8042:38:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29924,
                  "nodeType": "EmitStatement",
                  "src": "8037:43:36"
                }
              ]
            },
            "documentation": {
              "id": 29911,
              "nodeType": "StructuredDocumentation",
              "src": "7858:56:36",
              "text": "@notice Toggle allowing depositing ETH to validators"
            },
            "functionSelector": "b5e5e64c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29914,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29913,
                  "name": "onlyByOwnGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28870,
                  "src": "7963:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "7963:12:36"
              }
            ],
            "name": "togglePauseDepositEther",
            "nameLocation": "7928:23:36",
            "parameters": {
              "id": 29912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7951:2:36"
            },
            "returnParameters": {
              "id": 29915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7976:0:36"
            },
            "scope": 30028,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29956,
            "nodeType": "FunctionDefinition",
            "src": "8149:228:36",
            "body": {
              "id": 29955,
              "nodeType": "Block",
              "src": "8209:168:36",
              "statements": [
                {
                  "assignments": [
                    29935,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29935,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "8225:7:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 29955,
                      "src": "8220:12:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29934,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8220:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 29945,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 29943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8274:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 29938,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29318,
                              "src": "8245:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 29937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8237:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29936,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8237:7:36",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8237:14:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 29940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8237:19:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 29942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 29941,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29929,
                          "src": "8265:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8237:36:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 29944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8237:40:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8219:58:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29947,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29935,
                        "src": "8295:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207472616e73666572",
                        "id": 29948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8304:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_103a54e78761a5822ffca37d337d2b215325cd061cbe37b2898a81b2cbcae825",
                          "typeString": "literal_string \"Invalid transfer\""
                        },
                        "value": "Invalid transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_103a54e78761a5822ffca37d337d2b215325cd061cbe37b2898a81b2cbcae825",
                          "typeString": "literal_string \"Invalid transfer\""
                        }
                      ],
                      "id": 29946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8287:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8287:36:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29950,
                  "nodeType": "ExpressionStatement",
                  "src": "8287:36:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29952,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29929,
                        "src": "8363:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29951,
                      "name": "EmergencyEtherRecovered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29987,
                      "src": "8339:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 29953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8339:31:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29954,
                  "nodeType": "EmitStatement",
                  "src": "8334:36:36"
                }
              ]
            },
            "documentation": {
              "id": 29927,
              "nodeType": "StructuredDocumentation",
              "src": "8093:51:36",
              "text": "@notice For emergencies if something gets stuck"
            },
            "functionSelector": "c3d31487",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29932,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29931,
                  "name": "onlyByOwnGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28870,
                  "src": "8196:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "8196:12:36"
              }
            ],
            "name": "recoverEther",
            "nameLocation": "8158:12:36",
            "parameters": {
              "id": 29930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29929,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8179:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29956,
                  "src": "8171:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8171:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8170:16:36"
            },
            "returnParameters": {
              "id": 29933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8209:0:36"
            },
            "scope": 30028,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29983,
            "nodeType": "FunctionDefinition",
            "src": "8467:261:36",
            "body": {
              "id": 29982,
              "nodeType": "Block",
              "src": "8554:174:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29971,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29318,
                            "src": "8602:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 29972,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29961,
                            "src": "8609:11:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 29968,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29959,
                                "src": "8579:12:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 29967,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22392,
                              "src": "8572:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22392_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 29969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8572:20:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22392",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 29970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22359,
                          "src": "8572:29:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 29973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8572:49:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7265636f76657245524332303a205472616e73666572206661696c6564",
                        "id": 29974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8623:31:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f582ebbb3c7a26670a6915aa5daeb304ac65499d2b41bdff4c27387ec42e5e90",
                          "typeString": "literal_string \"recoverERC20: Transfer failed\""
                        },
                        "value": "recoverERC20: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f582ebbb3c7a26670a6915aa5daeb304ac65499d2b41bdff4c27387ec42e5e90",
                          "typeString": "literal_string \"recoverERC20: Transfer failed\""
                        }
                      ],
                      "id": 29966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8564:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8564:91:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29976,
                  "nodeType": "ExpressionStatement",
                  "src": "8564:91:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 29978,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29959,
                        "src": "8695:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29979,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29961,
                        "src": "8709:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29977,
                      "name": "EmergencyERC20Recovered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29993,
                      "src": "8671:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 29980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8671:50:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29981,
                  "nodeType": "EmitStatement",
                  "src": "8666:55:36"
                }
              ]
            },
            "documentation": {
              "id": 29957,
              "nodeType": "StructuredDocumentation",
              "src": "8383:79:36",
              "text": "@notice For emergencies if someone accidentally sent some ERC20 tokens here"
            },
            "functionSelector": "8980f11f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29964,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29963,
                  "name": "onlyByOwnGov",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28870,
                  "src": "8541:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "8541:12:36"
              }
            ],
            "name": "recoverERC20",
            "nameLocation": "8476:12:36",
            "parameters": {
              "id": 29962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29959,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "8497:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29983,
                  "src": "8489:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8489:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29961,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "8519:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29983,
                  "src": "8511:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8511:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8488:43:36"
            },
            "returnParameters": {
              "id": 29965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8554:0:36"
            },
            "scope": 30028,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29987,
            "nodeType": "EventDefinition",
            "src": "8734:46:36",
            "anonymous": false,
            "eventSelector": "040130779a9eeca4469ba7b0c5223a65f424ea2a23f9b9ee336afd7905ef68b4",
            "name": "EmergencyEtherRecovered",
            "nameLocation": "8740:23:36",
            "parameters": {
              "id": 29986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29985,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8772:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29987,
                  "src": "8764:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8764:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8763:16:36"
            }
          },
          {
            "id": 29993,
            "nodeType": "EventDefinition",
            "src": "8785:73:36",
            "anonymous": false,
            "eventSelector": "2178cd1256ad9200080414ad733212aa6401e6a74954264b7654e671db074f56",
            "name": "EmergencyERC20Recovered",
            "nameLocation": "8791:23:36",
            "parameters": {
              "id": 29992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29989,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "8823:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29993,
                  "src": "8815:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8815:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29991,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "8845:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 29993,
                  "src": "8837:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8837:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8814:43:36"
            }
          },
          {
            "id": 30003,
            "nodeType": "EventDefinition",
            "src": "8863:113:36",
            "anonymous": false,
            "eventSelector": "29b3e86ecfd94a32218997c40b051e650e4fd8c97fc7a4d266be3f7c61c5205b",
            "name": "ETHSubmitted",
            "nameLocation": "8869:12:36",
            "parameters": {
              "id": 30002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29995,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8898:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30003,
                  "src": "8882:22:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8882:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29997,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8922:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30003,
                  "src": "8906:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8906:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29999,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sent_amount",
                  "nameLocation": "8941:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30003,
                  "src": "8933:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8933:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30001,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withheld_amt",
                  "nameLocation": "8962:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30003,
                  "src": "8954:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8954:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8881:94:36"
            }
          },
          {
            "id": 30007,
            "nodeType": "EventDefinition",
            "src": "8981:42:36",
            "anonymous": false,
            "eventSelector": "cead0025c428cc6485390ecd2b3213d7a3d44d3f190a3b880ba9025521365706",
            "name": "DepositEtherPaused",
            "nameLocation": "8987:18:36",
            "parameters": {
              "id": 30006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30005,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "new_status",
                  "nameLocation": "9011:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30007,
                  "src": "9006:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30004,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9006:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9005:17:36"
            }
          },
          {
            "id": 30013,
            "nodeType": "EventDefinition",
            "src": "9028:68:36",
            "anonymous": false,
            "eventSelector": "4d312bd9aebc53f5bfad5cc169f41e65030288ef6b769786d43998abfb69a250",
            "name": "DepositSent",
            "nameLocation": "9034:11:36",
            "parameters": {
              "id": 30012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30009,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pubKey",
                  "nameLocation": "9060:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30013,
                  "src": "9046:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30008,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9046:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30011,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalCredential",
                  "nameLocation": "9074:20:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30013,
                  "src": "9068:26:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30010,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9068:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9045:50:36"
            }
          },
          {
            "id": 30017,
            "nodeType": "EventDefinition",
            "src": "9101:36:36",
            "anonymous": false,
            "eventSelector": "4aff1af3f32e78f88c86566e6b50fe05d6ba3d9c7374e042ac17e5191c5fac56",
            "name": "SubmitPaused",
            "nameLocation": "9107:12:36",
            "parameters": {
              "id": 30016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30015,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "new_status",
                  "nameLocation": "9125:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30017,
                  "src": "9120:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30014,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9120:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9119:17:36"
            }
          },
          {
            "id": 30023,
            "nodeType": "EventDefinition",
            "src": "9142:59:36",
            "anonymous": false,
            "eventSelector": "60b677b352dc4c2f8482a85e1557d78515c38e3f3671be950a8357db6f563b9b",
            "name": "WithheldETHMoved",
            "nameLocation": "9148:16:36",
            "parameters": {
              "id": 30022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30019,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9181:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30023,
                  "src": "9165:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9165:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30021,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9193:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30023,
                  "src": "9185:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9185:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9164:36:36"
            }
          },
          {
            "id": 30027,
            "nodeType": "EventDefinition",
            "src": "9206:41:36",
            "anonymous": false,
            "eventSelector": "9d9f4a1fa43ffde666e23300e98e21e37dccd7f33bb238071f5341a53f346f93",
            "name": "WithholdRatioSet",
            "nameLocation": "9212:16:36",
            "parameters": {
              "id": 30026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30025,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newRatio",
                  "nameLocation": "9237:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 30027,
                  "src": "9229:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9229:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9228:18:36"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29524,
              "name": "OperatorRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29314,
              "src": "1928:16:36"
            },
            "id": 29525,
            "nodeType": "InheritanceSpecifier",
            "src": "1928:16:36"
          },
          {
            "baseName": {
              "id": 29526,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21727,
              "src": "1946:15:36"
            },
            "id": 29527,
            "nodeType": "InheritanceSpecifier",
            "src": "1946:15:36"
          }
        ],
        "canonicalName": "frxETHMinter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 29523,
          "nodeType": "StructuredDocumentation",
          "src": "1615:287:36",
          "text": "@dev Has permission to mint frxETH. \nOnce +32 ETH has accumulated, adds it to a validator, which then deposits it for ETH 2.0 staking (depositEther())\nWithhold ratio refers to what percentage of ETH this contract keeps whenever a user makes a deposit. 0% is kept initially "
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30028,
          21727,
          29314,
          29415
        ],
        "name": "frxETHMinter",
        "nameLocation": "1912:12:36",
        "scope": 30029,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 36
}